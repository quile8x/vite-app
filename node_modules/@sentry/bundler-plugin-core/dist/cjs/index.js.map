{"version":3,"file":"index.js","sources":["../../../../node_modules/@sentry/utils/esm/worldwide.js","../../../../node_modules/@sentry/utils/esm/logger.js","../../../../node_modules/@sentry/utils/esm/env.js","../../../../node_modules/@sentry/utils/esm/node.js","../../../../node_modules/@sentry/utils/esm/syncpromise.js","../../../../node_modules/@sentry/utils/esm/time.js","../../src/utils.ts","../../src/options-mapping.ts","../../src/sentry/telemetry.ts","../../src/sentry/releasePipeline.ts","../../src/sentry/logger.ts","../../src/sentry/cli.ts","../../src/debug-id.ts","../../src/index.ts"],"sourcesContent":["/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { GLOBAL_OBJ, getGlobalSingleton } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { dynamicRequire, isNodeEnv } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","import findUp from \"find-up\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport os from \"os\";\nimport crypto from \"crypto\";\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\ntype PackageJson = Record<string, unknown>;\n\n/**\n * Get the closes package.json from a given starting point upwards.\n * This handles a few edge cases:\n * * Check if a given file package.json appears to be an actual NPM package.json file\n * * Stop at the home dir, to avoid looking too deeply\n */\nexport function getPackageJson({ cwd, stopAt }: { cwd?: string; stopAt?: string } = {}):\n  | PackageJson\n  | undefined {\n  return lookupPackageJson(cwd ?? process.cwd(), path.normalize(stopAt ?? os.homedir()));\n}\n\nexport function parseMajorVersion(version: string): number | undefined {\n  // if it has a `v` prefix, remove it\n  if (version.startsWith(\"v\")) {\n    version = version.slice(1);\n  }\n\n  // First, try simple lookup of exact, ~ and ^ versions\n  const regex = /^[\\^~]?(\\d+)(\\.\\d+)?(\\.\\d+)?(-.+)?/;\n\n  const match = version.match(regex);\n  if (match) {\n    return parseInt(match[1] as string, 10);\n  }\n\n  // Try to parse e.g. 1.x\n  const coerced = parseInt(version, 10);\n  if (!Number.isNaN(coerced)) {\n    return coerced;\n  }\n\n  // Match <= and >= ranges.\n  const gteLteRegex = /^[<>]=\\s*(\\d+)(\\.\\d+)?(\\.\\d+)?(-.+)?/;\n  const gteLteMatch = version.match(gteLteRegex);\n  if (gteLteMatch) {\n    return parseInt(gteLteMatch[1] as string, 10);\n  }\n\n  // match < ranges\n  const ltRegex = /^<\\s*(\\d+)(\\.\\d+)?(\\.\\d+)?(-.+)?/;\n  const ltMatch = version.match(ltRegex);\n  if (ltMatch) {\n    // Two scenarios:\n    // a) < 2.0.0 --> return 1\n    // b) < 2.1.0 --> return 2\n\n    const major = parseInt(ltMatch[1] as string, 10);\n\n    if (\n      // minor version > 0\n      (typeof ltMatch[2] === \"string\" && parseInt(ltMatch[2].slice(1), 10) > 0) ||\n      // patch version > 0\n      (typeof ltMatch[3] === \"string\" && parseInt(ltMatch[3].slice(1), 10) > 0)\n    ) {\n      return major;\n    }\n\n    return major - 1;\n  }\n\n  // match > ranges\n  const gtRegex = /^>\\s*(\\d+)(\\.\\d+)?(\\.\\d+)?(-.+)?/;\n  const gtMatch = version.match(gtRegex);\n  if (gtMatch) {\n    // We always return the version here, even though it _may_ be incorrect\n    // E.g. if given > 2.0.0, it should be 2 if there exists any 2.x.x version, else 3\n    // Since there is no way for us to know this, we're going to assume any kind of patch/feature release probably exists\n    return parseInt(gtMatch[1] as string, 10);\n  }\n  return undefined;\n}\n\n// This is an explicit list of packages where we want to include the (major) version number.\nconst PACKAGES_TO_INCLUDE_VERSION = [\n  \"react\",\n  \"@angular/core\",\n  \"vue\",\n  \"ember-source\",\n  \"svelte\",\n  \"@sveltejs/kit\",\n  \"webpack\",\n  \"vite\",\n  \"gatsby\",\n  \"next\",\n  \"remix\",\n  \"rollup\",\n  \"esbuild\",\n];\n\nexport function getDependencies(packageJson: PackageJson): {\n  deps: string[];\n  depsVersions: Record<string, number>;\n} {\n  const dependencies: Record<string, string> = Object.assign(\n    {},\n    packageJson[\"devDependencies\"] ?? {},\n    packageJson[\"dependencies\"] ?? {}\n  );\n\n  const deps = Object.keys(dependencies).sort();\n\n  const depsVersions: Record<string, number> = deps.reduce((depsVersions, depName) => {\n    if (PACKAGES_TO_INCLUDE_VERSION.includes(depName)) {\n      const version = dependencies[depName] as string;\n      const majorVersion = parseMajorVersion(version);\n      if (majorVersion) {\n        depsVersions[depName] = majorVersion;\n      }\n    }\n    return depsVersions;\n  }, {} as Record<string, number>);\n\n  return { deps, depsVersions };\n}\n\nfunction lookupPackageJson(cwd: string, stopAt: string): PackageJson | undefined {\n  const jsonPath = findUp.sync(\n    (dirName) => {\n      // Stop if we reach this dir\n      if (path.normalize(dirName) === stopAt) {\n        return findUp.stop;\n      }\n\n      return findUp.sync.exists(dirName + \"/package.json\") ? \"package.json\" : undefined;\n    },\n    { cwd }\n  );\n\n  if (!jsonPath) {\n    return undefined;\n  }\n\n  try {\n    const jsonStr = fs.readFileSync(jsonPath, \"utf8\");\n    const json = JSON.parse(jsonStr) as PackageJson;\n\n    // Ensure it is an actual package.json\n    // This is very much not bulletproof, but should be good enough\n    if (\"name\" in json || \"private\" in json) {\n      return json;\n    }\n  } catch (error) {\n    // Ignore and walk up\n  }\n\n  // Continue up the tree, if we find a fitting package.json\n  const newCwd = path.dirname(path.resolve(jsonPath + \"/..\"));\n  return lookupPackageJson(newCwd, stopAt);\n}\n\n/**\n * Deterministically hashes a string and turns the hash into a uuid.\n */\nexport function stringToUUID(str: string): string {\n  const md5sum = crypto.createHash(\"md5\");\n  md5sum.update(str);\n  const md5Hash = md5sum.digest(\"hex\");\n  return (\n    md5Hash.substring(0, 8) +\n    \"-\" +\n    md5Hash.substring(8, 12) +\n    \"-4\" +\n    md5Hash.substring(13, 16) +\n    \"-\" +\n    md5Hash.substring(16, 20) +\n    \"-\" +\n    md5Hash.substring(20)\n  ).toLowerCase();\n}\n","import { Logger } from \"./sentry/logger\";\nimport { IncludeEntry as UserIncludeEntry, Options as UserOptions } from \"./types\";\nimport { arrayify } from \"./utils\";\n\ntype RequiredInternalOptions = Required<\n  Pick<\n    UserOptions,\n    | \"finalize\"\n    | \"dryRun\"\n    | \"debug\"\n    | \"silent\"\n    | \"cleanArtifacts\"\n    | \"telemetry\"\n    | \"injectReleasesMap\"\n    | \"_experiments\"\n    | \"injectRelease\"\n    | \"uploadSourceMaps\"\n  >\n>;\n\ntype OptionalInternalOptions = Partial<\n  Pick<\n    UserOptions,\n    | \"org\"\n    | \"project\"\n    | \"authToken\"\n    | \"url\"\n    | \"vcsRemote\"\n    | \"dist\"\n    | \"errorHandler\"\n    | \"setCommits\"\n    | \"deploy\"\n    | \"configFile\"\n    | \"headers\"\n    | \"sourcemaps\"\n  >\n>;\n\ntype NormalizedInternalOptions = {\n  releaseInjectionTargets: (string | RegExp)[] | ((filePath: string) => boolean) | undefined;\n  include: InternalIncludeEntry[];\n};\n\nexport type NormalizedOptions = RequiredInternalOptions &\n  OptionalInternalOptions &\n  NormalizedInternalOptions;\n\ntype RequiredInternalIncludeEntry = Required<\n  Pick<\n    UserIncludeEntry,\n    \"paths\" | \"ext\" | \"stripCommonPrefix\" | \"sourceMapReference\" | \"rewrite\" | \"validate\"\n  >\n>;\n\ntype OptionalInternalIncludeEntry = Partial<\n  Pick<UserIncludeEntry, \"ignoreFile\" | \"urlPrefix\" | \"urlSuffix\" | \"stripPrefix\">\n>;\n\nexport type InternalIncludeEntry = RequiredInternalIncludeEntry &\n  OptionalInternalIncludeEntry & {\n    ignore: string[];\n  };\n\nexport const SENTRY_SAAS_URL = \"https://sentry.io\";\n\nexport function normalizeUserOptions(userOptions: UserOptions) {\n  const options = {\n    // include is the only strictly required option\n    // (normalizeInclude needs all userOptions to access top-level include options)\n    include: normalizeInclude(userOptions),\n\n    // These options must be set b/c we need them for release injection.\n    // They can also be set as environment variables. Technically, they\n    // could be set in the config file but this would be too late for\n    // release injection because we only pass the config file path\n    // to the CLI\n    org: userOptions.org ?? process.env[\"SENTRY_ORG\"],\n    project: userOptions.project ?? process.env[\"SENTRY_PROJECT\"],\n    // Falling back to the empty string here b/c at a later point, we use\n    // Sentry CLI to determine a release if none was specified via options\n    // or env vars. In case we don't find one, we'll bail at that point.\n    release: userOptions.release ?? process.env[\"SENTRY_RELEASE\"] ?? \"\",\n    // We technically don't need the URL for anything release-specific\n    // but we want to make sure that we're only sending Sentry data\n    // of SaaS customers. Hence we want to read it anyway.\n    url: userOptions.url ?? process.env[\"SENTRY_URL\"] ?? SENTRY_SAAS_URL,\n\n    // Options with default values\n    finalize: userOptions.finalize ?? true,\n    cleanArtifacts: userOptions.cleanArtifacts ?? false,\n    dryRun: userOptions.dryRun ?? false,\n    debug: userOptions.debug ?? false,\n    silent: userOptions.silent ?? false,\n    telemetry: userOptions.telemetry ?? true,\n    injectReleasesMap: userOptions.injectReleasesMap ?? false,\n    injectRelease: userOptions.injectRelease ?? true,\n    uploadSourceMaps: userOptions.uploadSourceMaps ?? true,\n    sourcemaps: userOptions.sourcemaps,\n    _experiments: userOptions._experiments ?? {},\n\n    // These options and can also be set via env variables or the config file.\n    // If they're set in the options, we simply pass them to the CLI constructor.\n    // Sentry CLI will internally query env variables and read its config file if\n    // the passed options are undefined.\n    authToken: userOptions.authToken, // env var: `SENTRY_AUTH_TOKEN`\n\n    headers: userOptions.headers,\n\n    vcsRemote: userOptions.vcsRemote, // env var: `SENTRY_VSC_REMOTE`\n\n    // Optional options\n    setCommits: userOptions.setCommits,\n    deploy: userOptions.deploy,\n    releaseInjectionTargets: normalizeReleaseInjectionTargets(userOptions.releaseInjectionTargets),\n    dist: userOptions.dist,\n    errorHandler: userOptions.errorHandler,\n    configFile: userOptions.configFile,\n  };\n\n  return options;\n}\n\n/**\n * Converts the user-facing `releaseInjectionTargets` option to the internal\n * `releaseInjectionTargets` option\n */\nfunction normalizeReleaseInjectionTargets(\n  userReleaseInjectionTargets: UserOptions[\"releaseInjectionTargets\"]\n): (string | RegExp)[] | ((filePath: string) => boolean) | undefined {\n  if (userReleaseInjectionTargets === undefined) {\n    return undefined;\n  } else if (typeof userReleaseInjectionTargets === \"function\") {\n    return userReleaseInjectionTargets;\n  } else {\n    return arrayify(userReleaseInjectionTargets);\n  }\n}\n\n/**\n * Converts the user-facing `include` option to the internal `include` option,\n * resulting in an array of `InternalIncludeEntry` objects. This later on lets us\n * work with only one type of include data structure instead of multiple.\n *\n * During the process, we hoist top-level include options (e.g. urlPrefix) into each\n * object if they were not alrady specified in an `IncludeEntry`, making every object\n * fully self-contained. This is also the reason why we pass the entire options\n * object and not just `include`.\n *\n * @param userOptions the entire user-facing `options` object\n *\n * @return an array of `InternalIncludeEntry` objects.\n */\nfunction normalizeInclude(userOptions: UserOptions): InternalIncludeEntry[] {\n  if (!userOptions.include) {\n    return [];\n  }\n\n  return arrayify(userOptions.include)\n    .map((includeItem) =>\n      typeof includeItem === \"string\" ? { paths: [includeItem] } : includeItem\n    )\n    .map((userIncludeEntry) => normalizeIncludeEntry(userOptions, userIncludeEntry));\n}\n\n/**\n * Besides array-ifying the `ignore` option, this function hoists top level options into the items of the `include`\n * option. This is to simplify the handling of of the `include` items later on.\n */\nfunction normalizeIncludeEntry(\n  userOptions: UserOptions,\n  includeEntry: UserIncludeEntry\n): InternalIncludeEntry {\n  const ignoreOption = includeEntry.ignore ?? userOptions.ignore ?? [\"node_modules\"];\n  const ignore = Array.isArray(ignoreOption) ? ignoreOption : [ignoreOption];\n\n  // We're prefixing all entries in the `ext` option with a `.` (if it isn't already) to align with Node.js' `path.extname()`\n  const ext = includeEntry.ext ?? userOptions.ext ?? [\"js\", \"map\", \"jsbundle\", \"bundle\"];\n  const dotPrefixedExt = ext.map((extension) => `.${extension.replace(/^\\./, \"\")}`);\n\n  return {\n    paths: includeEntry.paths,\n    ignore,\n    ignoreFile: includeEntry.ignoreFile ?? userOptions.ignoreFile,\n    ext: dotPrefixedExt,\n    urlPrefix: includeEntry.urlPrefix ?? userOptions.urlPrefix,\n    urlSuffix: includeEntry.urlSuffix ?? userOptions.urlSuffix,\n    stripPrefix: includeEntry.stripPrefix ?? userOptions.stripPrefix,\n    stripCommonPrefix: includeEntry.stripCommonPrefix ?? userOptions.stripCommonPrefix ?? false,\n    sourceMapReference: includeEntry.sourceMapReference ?? userOptions.sourceMapReference ?? true,\n    rewrite: includeEntry.rewrite ?? userOptions.rewrite ?? true,\n    validate: includeEntry.validate ?? userOptions.validate ?? false,\n  };\n}\n\n/**\n * Validates a few combinations of options that are not checked by Sentry CLI.\n *\n * For all other options, we can rely on Sentry CLI to validate them. In fact,\n * we can't validate them in the plugin because Sentry CLI might pick up options from\n * its config file.\n *\n * @param options the internal options\n * @param logger the logger\n *\n * @returns `true` if the options are valid, `false` otherwise\n */\nexport function validateOptions(options: NormalizedOptions, logger: Logger): boolean {\n  if (options.injectReleasesMap && !options.org) {\n    logger.error(\n      \"The `injectReleasesMap` option was set but it is only supported when the `org` option is also specified.\",\n      \"Please set the `org` option (you can also set the SENTRY_ORG environment variable) or disable the `injectReleasesMap` option.\"\n    );\n    return false;\n  }\n\n  const setCommits = options.setCommits;\n  if (setCommits) {\n    if (!setCommits.auto && !(setCommits.repo && setCommits.commit)) {\n      logger.error(\n        \"The `setCommits` option was specified but is missing required properties.\",\n        \"Please set either `auto` or both, `repo` and `commit`.\"\n      );\n      return false;\n    }\n    if (setCommits.auto && setCommits.repo && setCommits) {\n      logger.warn(\n        \"The `setCommits` options includes `auto` but also `repo` and `commit`.\",\n        \"Ignoring `repo` and `commit`.\",\n        \"Please only set either `auto` or both, `repo` and `commit`.\"\n      );\n    }\n  }\n\n  if (options.deploy && !options.deploy.env) {\n    logger.error(\n      \"The `deploy` option was specified but is missing the required `env` property.\",\n      \"Please set the `env` property.\"\n    );\n    return false;\n  }\n\n  return true;\n}\n","import SentryCli from \"@sentry/cli\";\nimport { defaultStackParser, Hub, makeNodeTransport, NodeClient, Span } from \"@sentry/node\";\nimport { NormalizedOptions, SENTRY_SAAS_URL } from \"../options-mapping\";\nimport { BuildContext } from \"../types\";\n\nconst SENTRY_SAAS_HOSTNAME = \"sentry.io\";\n\nexport function makeSentryClient(\n  dsn: string,\n  allowedToSendTelemetryPromise: Promise<boolean>,\n  userProject: string | undefined\n): { sentryHub: Hub; sentryClient: NodeClient } {\n  const client = new NodeClient({\n    dsn,\n\n    tracesSampleRate: 1,\n    sampleRate: 1,\n\n    // We're also sending the user project in dist because it is an indexed fieldso we can use this data effectively in\n    // a dashboard.\n    // Yes, this is slightly abusing the purpose of this field.\n    dist: userProject,\n\n    release: __PACKAGE_VERSION__,\n    integrations: [],\n    tracePropagationTargets: [\"sentry.io/api\"],\n\n    stackParser: defaultStackParser,\n\n    beforeSend: (event) => {\n      event.exception?.values?.forEach((exception) => {\n        delete exception.stacktrace;\n      });\n\n      delete event.server_name; // Server name might contain PII\n      return event;\n    },\n\n    beforeSendTransaction: (event) => {\n      delete event.server_name; // Server name might contain PII\n      return event;\n    },\n\n    // We create a transport that stalls sending events until we know that we're allowed to (i.e. when Sentry CLI told\n    // us that the upload URL is the Sentry SaaS URL)\n    transport: (nodeTransportOptions) => {\n      const nodeTransport = makeNodeTransport(nodeTransportOptions);\n      return {\n        flush: (timeout) => nodeTransport.flush(timeout),\n        send: async (request) => {\n          const isAllowedToSend = await allowedToSendTelemetryPromise;\n          if (isAllowedToSend) {\n            return nodeTransport.send(request);\n          } else {\n            return undefined;\n          }\n        },\n      };\n    },\n  });\n\n  const hub = new Hub(client);\n\n  return { sentryClient: client, sentryHub: hub };\n}\n\n/**\n * Adds a span to the passed parentSpan or to the current transaction that's on the passed hub's scope.\n */\nexport function addSpanToTransaction(\n  ctx: BuildContext,\n  op?: string,\n  description?: string\n): Span | undefined {\n  const { hub, parentSpan } = ctx;\n  const actualSpan = parentSpan || hub.getScope()?.getTransaction();\n  const span = actualSpan?.startChild({ op, description });\n  hub.configureScope((scope) => scope.setSpan(span));\n\n  return span;\n}\n\nexport function addPluginOptionInformationToHub(\n  options: NormalizedOptions,\n  hub: Hub,\n  bundler: \"rollup\" | \"webpack\" | \"vite\" | \"esbuild\"\n) {\n  const {\n    org,\n    project,\n    cleanArtifacts,\n    finalize,\n    setCommits,\n    injectReleasesMap,\n    dryRun,\n    errorHandler,\n    deploy,\n    include,\n    sourcemaps,\n  } = options;\n\n  hub.setTag(\"include\", include.length > 1 ? \"multiple-entries\" : \"single-entry\");\n\n  // Optional release pipeline steps\n  if (cleanArtifacts) {\n    hub.setTag(\"clean-artifacts\", true);\n  }\n  if (setCommits) {\n    hub.setTag(\"set-commits\", setCommits.auto === true ? \"auto\" : \"manual\");\n  }\n  if (finalize) {\n    hub.setTag(\"finalize-release\", true);\n  }\n  if (deploy) {\n    hub.setTag(\"add-deploy\", true);\n  }\n\n  // Miscelaneous options\n  if (dryRun) {\n    hub.setTag(\"dry-run\", true);\n  }\n  if (injectReleasesMap) {\n    hub.setTag(\"inject-releases-map\", true);\n  }\n  if (errorHandler) {\n    hub.setTag(\"error-handler\", \"custom\");\n  }\n  if (sourcemaps?.assets) {\n    hub.setTag(\"debug-id-upload\", true);\n  }\n\n  hub.setTag(\"node\", process.version);\n\n  hub.setTags({\n    organization: org,\n    project,\n    bundler,\n  });\n\n  hub.setUser({ id: org });\n}\n\nexport async function shouldSendTelemetry(options: NormalizedOptions): Promise<boolean> {\n  const { silent, org, project, authToken, url, vcsRemote, headers, telemetry, dryRun } = options;\n\n  // `options.telemetry` defaults to true\n  if (telemetry === false) {\n    return false;\n  }\n\n  if (dryRun) {\n    return false;\n  }\n\n  if (url === SENTRY_SAAS_URL) {\n    return true;\n  }\n\n  const cli = new SentryCli(options.configFile, {\n    url,\n    authToken,\n    org,\n    project,\n    vcsRemote,\n    silent,\n    headers,\n  });\n\n  let cliInfo;\n  try {\n    // Makes a call to SentryCLI to get the Sentry server URL the CLI uses.\n    // We need to check and decide to use telemetry based on the CLI's respone to this call\n    // because only at this time we checked a possibly existing .sentryclirc file. This file\n    // could point to another URL than the default URL.\n    cliInfo = await cli.execute([\"info\"], false);\n  } catch (e) {\n    throw new Error(\n      'Sentry CLI \"info\" command failed, make sure you have an auth token configured, and your `url` option is correct.'\n    );\n  }\n\n  const cliInfoUrl = cliInfo\n    .split(/(\\r\\n|\\n|\\r)/)[0]\n    ?.replace(/^Sentry Server: /, \"\")\n    ?.trim();\n\n  if (cliInfoUrl === undefined) {\n    return false;\n  }\n\n  return new URL(cliInfoUrl).hostname === SENTRY_SAAS_HOSTNAME;\n}\n","// Build a facade that exposes necessary sentry functionality\n// Idea: We start out with Sentry-CLI and replace the cli-commands one by one afterwards.\n// Goal: eventually replace everything sentry-cli does with \"native\" code here\n// Reason: We don't want to depend on a binary that gets downloaded in a postinstall hook\n//           - no fixed version\n//           - huge download\n//           - unnecessary functionality\n\nimport { logger } from \"@sentry/utils\";\nimport { NormalizedOptions } from \"../options-mapping\";\nimport { BuildContext } from \"../types\";\nimport { addSpanToTransaction } from \"./telemetry\";\n\nexport async function createNewRelease(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  const span = addSpanToTransaction(ctx, \"function.plugin.create_release\");\n\n  try {\n    await ctx.cli.releases.new(releaseName);\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Creating new release failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully created release.\" });\n  ctx.logger.info(\"Successfully created release.\");\n}\n\nexport async function cleanArtifacts(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  if (!options.cleanArtifacts) {\n    logger.debug(\"Skipping artifact cleanup.\");\n    return;\n  }\n\n  const span = addSpanToTransaction(ctx, \"function.plugin.clean_artifacts\");\n\n  try {\n    await ctx.cli.releases.execute([\"releases\", \"files\", releaseName, \"delete\", \"--all\"], true);\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Deleting release files failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully cleaned previous artifacts.\" });\n  ctx.logger.info(\"Successfully cleaned previous artifacts.\");\n}\n\nexport async function uploadSourceMaps(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  if (!options.uploadSourceMaps) {\n    logger.debug(\"Skipping source maps upload.\");\n    return;\n  }\n\n  const span = addSpanToTransaction(ctx, \"function.plugin.upload_sourcemaps\");\n  ctx.logger.info(\"Uploading Sourcemaps.\");\n\n  // Since our internal include entries contain all top-level sourcemaps options,\n  // we only need to pass the include option here.\n  try {\n    await ctx.cli.releases.uploadSourceMaps(releaseName, {\n      include: options.include,\n      dist: options.dist,\n    });\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Uploading source maps failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully uploaded source maps.\" });\n  ctx.logger.info(\"Successfully uploaded source maps.\");\n}\n\nexport async function uploadDebugIdSourcemaps(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  folderPathToUpload: string,\n  releaseName: string\n): Promise<void> {\n  const span = addSpanToTransaction(ctx, \"function.plugin.upload_debug_id_sourcemaps\");\n  ctx.logger.info(\"Uploading debug ID Sourcemaps.\");\n\n  // Since our internal include entries contain all top-level sourcemaps options,\n  // we only need to pass the include option here.\n  try {\n    await ctx.cli.releases.uploadSourceMaps(releaseName, {\n      include: [\n        {\n          paths: [folderPathToUpload],\n          rewrite: false,\n          dist: options.dist,\n        },\n      ],\n      useArtifactBundle: true,\n    });\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Uploading debug ID source maps failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully uploaded debug ID source maps.\" });\n  ctx.logger.info(\"Successfully uploaded debug ID source maps.\");\n}\n\nexport async function setCommits(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  if (!options.setCommits) {\n    logger.debug(\"Skipping setting commits to release.\");\n    return;\n  }\n\n  const span = addSpanToTransaction(ctx, \"function.plugin.set_commits\");\n\n  const { auto, repo, commit, previousCommit, ignoreMissing, ignoreEmpty } = options.setCommits;\n\n  try {\n    await ctx.cli.releases.setCommits(releaseName, {\n      commit,\n      previousCommit,\n      repo,\n      auto,\n      ignoreMissing,\n      ignoreEmpty,\n    });\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Setting commits failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.logger.info(\"Successfully set commits.\");\n}\n\nexport async function finalizeRelease(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  if (!options.finalize) {\n    ctx.hub.addBreadcrumb({ level: \"info\", message: \"Skipping release finalization.\" });\n    logger.debug(\"Skipping release finalization.\");\n    return;\n  }\n\n  const span = addSpanToTransaction(ctx, \"function.plugin.finalize_release\");\n\n  try {\n    await ctx.cli.releases.finalize(releaseName);\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Finalizing release failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully finalized release.\" });\n  ctx.logger.info(\"Successfully finalized release.\");\n}\n\nexport async function addDeploy(\n  options: NormalizedOptions,\n  ctx: BuildContext,\n  releaseName: string\n): Promise<void> {\n  if (!options.deploy) {\n    ctx.hub.addBreadcrumb({ level: \"info\", message: \"Skipping adding deploy info to release.\" });\n    logger.debug(\"Skipping adding deploy info to release.\");\n    return;\n  }\n\n  const span = addSpanToTransaction(ctx, \"function.plugin.deploy\");\n\n  const { env, started, finished, time, name, url } = options.deploy;\n\n  try {\n    await ctx.cli.releases.newDeploy(releaseName, {\n      env,\n      started,\n      finished,\n      time,\n      name,\n      url,\n    });\n  } catch (e) {\n    ctx.hub.captureException(new Error(\"CLI Error: Adding deploy info failed\"));\n    throw e;\n  } finally {\n    span?.finish();\n  }\n\n  ctx.hub.addBreadcrumb({ level: \"info\", message: \"Successfully added deploy.\" });\n  ctx.logger.info(\"Successfully added deploy.\");\n}\n","interface LoggerOptions {\n  silent: boolean;\n  debug: boolean;\n  prefix: string;\n}\n\nexport type Logger = {\n  info(message: string, ...params: unknown[]): void;\n  warn(message: string, ...params: unknown[]): void;\n  error(message: string, ...params: unknown[]): void;\n  debug(message: string, ...params: unknown[]): void;\n};\n\nexport function createLogger(options: LoggerOptions): Logger {\n  return {\n    info(message: string, ...params: unknown[]) {\n      if (!options.silent) {\n        // eslint-disable-next-line no-console\n        console.log(`${options.prefix} Info: ${message}`, ...params);\n      }\n    },\n    warn(message: string, ...params: unknown[]) {\n      if (!options.silent) {\n        // eslint-disable-next-line no-console\n        console.log(`${options.prefix} Warning: ${message}`, ...params);\n      }\n    },\n    error(message: string, ...params: unknown[]) {\n      if (!options.silent) {\n        // eslint-disable-next-line no-console\n        console.log(`${options.prefix} Error: ${message}`, ...params);\n      }\n    },\n    debug(message: string, ...params: unknown[]) {\n      if (!options.silent && options.debug) {\n        // eslint-disable-next-line no-console\n        console.log(`${options.prefix} Debug: ${message}`, ...params);\n      }\n    },\n  };\n}\n","import SentryCli, { SentryCliReleases } from \"@sentry/cli\";\nimport { NormalizedOptions } from \"../options-mapping\";\nimport { Logger } from \"./logger\";\n\ntype SentryDryRunCLI = {\n  releases: Omit<SentryCliReleases, \"listDeploys\">;\n  execute: (args: string[], live: boolean) => Promise<string>;\n};\nexport type SentryCLILike = SentryCli | SentryDryRunCLI;\n\n/**\n * Creates a new Sentry CLI instance.\n *\n * In case, users selected the `dryRun` options, this returns a stub\n * that makes no-ops out of most CLI operations\n */\nexport function getSentryCli(internalOptions: NormalizedOptions, logger: Logger): SentryCLILike {\n  const { silent, org, project, authToken, url, vcsRemote, headers } = internalOptions;\n  const cli = new SentryCli(internalOptions.configFile, {\n    url,\n    authToken,\n    org,\n    project,\n    vcsRemote,\n    silent,\n    headers,\n  });\n\n  if (internalOptions.dryRun) {\n    logger.info(\"In DRY RUN Mode\");\n    return getDryRunCLI(cli, logger);\n  }\n\n  return cli;\n}\n\nfunction getDryRunCLI(cli: SentryCli, logger: Logger): SentryDryRunCLI {\n  return {\n    releases: {\n      proposeVersion: () =>\n        cli.releases.proposeVersion().then((version) => {\n          logger.info(\"Proposed version:\\n\", version);\n          return version;\n        }),\n      new: (release: string) => {\n        logger.info(\"Creating new release:\\n\", release);\n        return Promise.resolve(release);\n      },\n      uploadSourceMaps: (release: string, config: unknown) => {\n        logger.info(\"Calling upload-sourcemaps with:\\n\", config);\n        return Promise.resolve(release);\n      },\n      finalize: (release: string) => {\n        logger.info(\"Finalizing release:\\n\", release);\n        return Promise.resolve(release);\n      },\n      setCommits: (release: string, config: unknown) => {\n        logger.info(\"Calling set-commits with:\\n\", config);\n        return Promise.resolve(release);\n      },\n      newDeploy: (release: string, config: unknown) => {\n        logger.info(\"Calling deploy with:\\n\", config);\n        return Promise.resolve(release);\n      },\n      execute: (args: string[], live: boolean) => {\n        logger.info(\"Executing\", args, \"live:\", live);\n        return Promise.resolve(\"\");\n      },\n    },\n    execute: (args: string[], live: boolean) => {\n      logger.info(\"Executing\", args, \"live:\", live);\n      return Promise.resolve(\"Executed\");\n    },\n  };\n}\n","import * as fs from \"fs\";\nimport MagicString from \"magic-string\";\nimport * as path from \"path\";\nimport * as util from \"util\";\nimport { Logger } from \"./sentry/logger\";\nimport { stringToUUID } from \"./utils\";\n\n// TODO: Find a more elaborate process to generate this. (Maybe with type checking and built-in minification)\nconst DEBUG_ID_INJECTOR_SNIPPET =\n  ';!function(){try{var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},n=(new Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]=\"__SENTRY_DEBUG_ID__\",e._sentryDebugIdIdentifier=\"sentry-dbid-__SENTRY_DEBUG_ID__\")}catch(e){}}();';\n\nexport function injectDebugIdSnippetIntoChunk(code: string, filename?: string) {\n  const debugId = stringToUUID(code); // generate a deterministic debug ID\n  const ms = new MagicString(code, { filename });\n\n  const codeToInject = DEBUG_ID_INJECTOR_SNIPPET.replace(/__SENTRY_DEBUG_ID__/g, debugId);\n\n  // We need to be careful not to inject the snippet before any `\"use strict\";`s.\n  // As an additional complication `\"use strict\";`s may come after any number of comments.\n  const commentUseStrictRegex =\n    /^(?:\\s*|\\/\\*(.|\\r|\\n)*?\\*\\/|\\/\\/.*?[\\n\\r])*(?:\"use strict\";|'use strict';)?/;\n\n  if (code.match(commentUseStrictRegex)?.[0]) {\n    // Add injected code after any comments or \"use strict\" at the beginning of the bundle.\n    ms.replace(commentUseStrictRegex, (match) => `${match}${codeToInject}`);\n  } else {\n    // ms.replace() doesn't work when there is an empty string match (which happens if\n    // there is neither, a comment, nor a \"use strict\" at the top of the chunk) so we\n    // need this special case here.\n    ms.prepend(codeToInject);\n  }\n\n  return {\n    code: ms.toString(),\n    map: ms.generateMap(),\n  };\n}\n\nexport async function prepareBundleForDebugIdUpload(\n  bundleFilePath: string,\n  uploadFolder: string,\n  uniqueUploadName: string,\n  logger: Logger\n) {\n  let bundleContent;\n  try {\n    bundleContent = await util.promisify(fs.readFile)(bundleFilePath, \"utf8\");\n  } catch (e) {\n    logger.warn(`Could not read bundle to determine debug ID and source map: ${bundleFilePath}`);\n    return;\n  }\n\n  const debugId = determineDebugIdFromBundleSource(bundleContent);\n  if (debugId === undefined) {\n    logger.warn(`Could not determine debug ID from bundle: ${bundleFilePath}`);\n    return;\n  }\n\n  bundleContent += `\\n//# debugId=${debugId}`;\n  const writeSourceFilePromise = util.promisify(fs.writeFile)(\n    path.join(uploadFolder, `${uniqueUploadName}.js`),\n    bundleContent,\n    \"utf-8\"\n  );\n\n  const writeSourceMapFilePromise = determineSourceMapPathFromBundle(\n    bundleFilePath,\n    bundleContent,\n    logger\n  ).then(async (sourceMapPath): Promise<void> => {\n    if (sourceMapPath) {\n      return await prepareSourceMapForDebugIdUpload(\n        sourceMapPath,\n        path.join(uploadFolder, `${uniqueUploadName}.js.map`),\n        debugId,\n        logger\n      );\n    }\n  });\n\n  return Promise.all([writeSourceFilePromise, writeSourceMapFilePromise]);\n}\n\n/**\n * Looks for a particular string pattern (`sdbid-[debug ID]`) in the bundle\n * source and extracts the bundle's debug ID from it.\n *\n * The string pattern is injected via the debug ID injection snipped.\n */\nfunction determineDebugIdFromBundleSource(code: string): string | undefined {\n  const match = code.match(\n    /sentry-dbid-([0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12})/\n  );\n\n  if (match) {\n    return match[1];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Applies a set of heuristics to find the source map for a particular bundle.\n *\n * @returns the path to the bundle's source map or `undefined` if none could be found.\n */\nasync function determineSourceMapPathFromBundle(\n  bundlePath: string,\n  bundleSource: string,\n  logger: Logger\n): Promise<string | undefined> {\n  // 1. try to find source map at `sourceMappingURL` location\n  const sourceMappingUrlMatch = bundleSource.match(/^\\/\\/# sourceMappingURL=(.*)$/);\n  if (sourceMappingUrlMatch) {\n    const sourceMappingUrl = path.normalize(sourceMappingUrlMatch[1] as string);\n    if (path.isAbsolute(sourceMappingUrl)) {\n      return sourceMappingUrl;\n    } else {\n      return path.join(path.dirname(bundlePath), sourceMappingUrl);\n    }\n  }\n\n  // 2. try to find source map at path adjacent to chunk source, but with `.map` appended\n  try {\n    const adjacentSourceMapFilePath = bundlePath + \".map\";\n    await util.promisify(fs.access)(adjacentSourceMapFilePath);\n    return adjacentSourceMapFilePath;\n  } catch (e) {\n    // noop\n  }\n\n  logger.warn(`Could not determine source map path for bundle: ${bundlePath}`);\n  return undefined;\n}\n\n/**\n * Reads a source map, injects debug ID fields, and writes the source map to the target path.\n */\nasync function prepareSourceMapForDebugIdUpload(\n  sourceMapPath: string,\n  targetPath: string,\n  debugId: string,\n  logger: Logger\n): Promise<void> {\n  try {\n    const sourceMapFileContent = await util.promisify(fs.readFile)(sourceMapPath, {\n      encoding: \"utf8\",\n    });\n\n    const map = JSON.parse(sourceMapFileContent) as Record<string, string>;\n\n    // For now we write both fields until we know what will become the standard - if ever.\n    map[\"debug_id\"] = debugId;\n    map[\"debugId\"] = debugId;\n\n    await util.promisify(fs.writeFile)(targetPath, JSON.stringify(map), {\n      encoding: \"utf8\",\n    });\n  } catch (e) {\n    logger.warn(`Failed to prepare source map for debug ID upload: ${sourceMapPath}`);\n  }\n}\n","import { createUnplugin, UnpluginOptions } from \"unplugin\";\nimport MagicString from \"magic-string\";\nimport { Options, BuildContext } from \"./types\";\nimport {\n  createNewRelease,\n  cleanArtifacts,\n  addDeploy,\n  finalizeRelease,\n  setCommits,\n  uploadSourceMaps,\n  uploadDebugIdSourcemaps,\n} from \"./sentry/releasePipeline\";\nimport \"@sentry/tracing\";\nimport SentryCli from \"@sentry/cli\";\nimport {\n  addPluginOptionInformationToHub,\n  addSpanToTransaction,\n  makeSentryClient,\n  shouldSendTelemetry,\n} from \"./sentry/telemetry\";\nimport { Span, Transaction } from \"@sentry/types\";\nimport { createLogger, Logger } from \"./sentry/logger\";\nimport { NormalizedOptions, normalizeUserOptions, validateOptions } from \"./options-mapping\";\nimport { getSentryCli } from \"./sentry/cli\";\nimport { makeMain } from \"@sentry/node\";\nimport os from \"os\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport { createRequire } from \"module\";\nimport { promisify } from \"util\";\nimport { getDependencies, getPackageJson, parseMajorVersion, stringToUUID } from \"./utils\";\nimport { glob } from \"glob\";\nimport { injectDebugIdSnippetIntoChunk, prepareBundleForDebugIdUpload } from \"./debug-id\";\nimport webpackSources from \"webpack-sources\";\nimport type { sources } from \"webpack\";\n\nconst ALLOWED_TRANSFORMATION_FILE_ENDINGS = [\".js\", \".ts\", \".jsx\", \".tsx\", \".mjs\"];\n\n// Use createRequire because esm doesn't like built-in require.resolve\nconst require = createRequire(import.meta.url);\n\nconst releaseInjectionFilePath = require.resolve(\n  \"@sentry/bundler-plugin-core/sentry-release-injection-file\"\n);\n\nconst esbuildDebugIdInjectionFilePath = require.resolve(\n  \"@sentry/bundler-plugin-core/sentry-esbuild-debugid-injection-file\"\n);\n\n/**\n * The sentry bundler plugin concerns itself with two things:\n * - Release injection\n * - Sourcemaps upload\n *\n * Release injection:\n * Per default the sentry bundler plugin will inject a global `SENTRY_RELEASE` into each JavaScript/TypeScript module\n * that is part of the bundle. On a technical level this is done by appending an import (`import \"sentry-release-injector;\"`)\n * to all entrypoint files of the user code (see `transformInclude` and `transform` hooks). This import is then resolved\n * by the sentry plugin to a virtual module that sets the global variable (see `resolveId` and `load` hooks).\n * If a user wants to inject the release into a particular set of modules they can use the `releaseInjectionTargets` option.\n *\n * Source maps upload:\n *\n * The sentry bundler plugin will also take care of uploading source maps to Sentry. This\n * is all done in the `writeBundle` hook. In this hook the sentry plugin will execute the\n * release creation pipeline:\n *\n * 1. Create a new release\n * 2. Delete already uploaded artifacts for this release (if `cleanArtifacts` is enabled)\n * 3. Upload sourcemaps based on `include` and source-map-specific options\n * 4. Associate a range of commits with the release (if `setCommits` is specified)\n * 5. Finalize the release (unless `finalize` is disabled)\n * 6. Add deploy information to the release (if `deploy` is specified)\n *\n * This release creation pipeline relies on Sentry CLI to execute the different steps.\n */\nconst unplugin = createUnplugin<Options, true>((userOptions, unpluginMetaContext) => {\n  const options = normalizeUserOptions(userOptions);\n\n  const allowedToSendTelemetryPromise = shouldSendTelemetry(options);\n\n  const { sentryHub, sentryClient } = makeSentryClient(\n    \"https://4c2bae7d9fbc413e8f7385f55c515d51@o1.ingest.sentry.io/6690737\",\n    allowedToSendTelemetryPromise,\n    options.project\n  );\n\n  addPluginOptionInformationToHub(options, sentryHub, unpluginMetaContext.framework);\n\n  //TODO: This call is problematic because as soon as we set our hub as the current hub\n  //      we might interfere with other plugins that use Sentry. However, for now, we'll\n  //      leave it in because without it, we can't get distributed traces (which are pretty nice)\n  //      Let's keep it until someone complains about interference.\n  //      The ideal solution would be a code change in the JS SDK but it's not a straight-forward fix.\n  makeMain(sentryHub);\n\n  const logger = createLogger({\n    prefix: `[sentry-${unpluginMetaContext.framework}-plugin]`,\n    silent: options.silent,\n    debug: options.debug,\n  });\n\n  if (!validateOptions(options, logger)) {\n    handleError(\n      new Error(\"Options were not set correctly. See output above for more details.\"),\n      logger,\n      options.errorHandler\n    );\n  }\n\n  const cli = getSentryCli(options, logger);\n\n  const releaseNamePromise = new Promise<string>((resolve) => {\n    if (userOptions.release) {\n      resolve(userOptions.release);\n    } else {\n      resolve(cli.releases.proposeVersion());\n    }\n  });\n\n  let transaction: Transaction | undefined;\n  let releaseInjectionSpan: Span | undefined;\n\n  const plugins: UnpluginOptions[] = [];\n\n  plugins.push({\n    name: \"sentry-plugin\",\n    enforce: \"pre\", // needed for Vite to call resolveId hook\n\n    /**\n     * Responsible for starting the plugin execution transaction and the release injection span\n     */\n    async buildStart() {\n      logger.debug(\"Called 'buildStart'\");\n\n      const isAllowedToSendToSendTelemetry = await allowedToSendTelemetryPromise;\n      if (isAllowedToSendToSendTelemetry) {\n        logger.info(\"Sending error and performance telemetry data to Sentry.\");\n        logger.info(\"To disable telemetry, set `options.telemetry` to `false`.\");\n        sentryHub.addBreadcrumb({ level: \"info\", message: \"Telemetry enabled.\" });\n      } else {\n        sentryHub.addBreadcrumb({\n          level: \"info\",\n          message: \"Telemetry disabled. This should never show up in a Sentry event.\",\n        });\n      }\n\n      if (process.cwd().match(/\\\\node_modules\\\\|\\/node_modules\\//)) {\n        logger.warn(\n          \"Running Sentry plugin from within a `node_modules` folder. Some features may not work.\"\n        );\n      }\n\n      const releaseName = await releaseNamePromise;\n\n      // At this point, we either have determined a release or we have to bail\n      if (!releaseName) {\n        handleError(\n          new Error(\n            \"Unable to determine a release name. Make sure to set the `release` option or use an environment that supports auto-detection https://docs.sentry.io/cli/releases/#creating-releases`\"\n          ),\n          logger,\n          options.errorHandler\n        );\n      }\n\n      transaction = sentryHub.startTransaction({\n        op: \"function.plugin\",\n        name: \"Sentry Bundler Plugin execution\",\n      });\n\n      releaseInjectionSpan = addSpanToTransaction(\n        { hub: sentryHub, parentSpan: transaction, logger, cli },\n        \"function.plugin.inject_release\",\n        \"Release injection\"\n      );\n    },\n\n    /**\n     * Responsible for returning the \"sentry-release-injector\" ID when we encounter it. We return the ID so load is\n     * called and we can \"virtually\" load the module. See `load` hook for more info on why it's virtual.\n     *\n     * We also record the id (i.e. absolute path) of any non-entrypoint.\n     *\n     * @param id For imports: The absolute path of the module to be imported. For entrypoints: The path the user defined as entrypoint - may also be relative.\n     * @param importer For imports: The absolute path of the module that imported this module. For entrypoints: `undefined`.\n     * @param options Additional information to use for making a resolving decision.\n     * @returns `\"sentry-release-injector\"` when the imported file is called `\"sentry-release-injector\"`. Otherwise returns `undefined`.\n     */\n    resolveId(id, importer, { isEntry }) {\n      logger.debug('Called \"resolveId\":', { id, importer, isEntry });\n      return undefined;\n    },\n\n    /**\n     * This hook determines whether we want to transform a module. In the sentry bundler plugin we want to transform every entrypoint\n     * unless configured otherwise with the `releaseInjectionTargets` option.\n     *\n     * @param id Always the absolute (fully resolved) path to the module.\n     * @returns `true` or `false` depending on whether we want to transform the module. For the sentry bundler plugin we only\n     * want to transform the release injector file.\n     */\n    transformInclude(id) {\n      logger.debug('Called \"transformInclude\":', { id });\n\n      if (id.includes(\"sentry-release-injection-file\")) {\n        return true;\n      }\n\n      if (id.match(/\\\\node_modules\\\\|\\/node_modules\\//)) {\n        return false; // never transform 3rd party modules\n      }\n\n      // We normalize the id because vite always passes `id` as a unix style path which causes problems when a user passes\n      // a windows style path to `releaseInjectionTargets`\n      const normalizedId = path.normalize(id);\n\n      if (options.releaseInjectionTargets) {\n        // If there's an `releaseInjectionTargets` option transform (ie. inject the release varible) when the file path matches the option.\n        if (typeof options.releaseInjectionTargets === \"function\") {\n          return options.releaseInjectionTargets(normalizedId);\n        }\n\n        return options.releaseInjectionTargets.some((entry) => {\n          if (entry instanceof RegExp) {\n            return entry.test(normalizedId);\n          } else {\n            const normalizedEntry = path.normalize(entry);\n            return normalizedId === normalizedEntry;\n          }\n        });\n      } else {\n        const pathIsOrdinary = !normalizedId.includes(\"?\") && !normalizedId.includes(\"#\");\n\n        const pathHasAllowedFileEnding = ALLOWED_TRANSFORMATION_FILE_ENDINGS.some(\n          (allowedFileEnding) => normalizedId.endsWith(allowedFileEnding)\n        );\n\n        return pathIsOrdinary && pathHasAllowedFileEnding;\n      }\n    },\n\n    /**\n     * This hook is responsible for injecting the \"sentry release injector\" imoprt statement into each entrypoint unless\n     * configured otherwise with the `releaseInjectionTargets` option (logic for that is in the `transformInclude` hook).\n     *\n     * @param code Code of the file to transform.\n     * @param id Always the absolute (fully resolved) path to the module.\n     * @returns transformed code + source map\n     */\n    async transform(code, id) {\n      logger.debug('Called \"transform\":', { id });\n\n      if (!options.injectRelease) {\n        return;\n      }\n\n      // The MagicString library allows us to generate sourcemaps for the changes we make to the user code.\n      const ms = new MagicString(code);\n\n      if (code.includes(\"_sentry_release_injection_file\")) {\n        // Appending instead of prepending has less probability of mucking with user's source maps.\n        ms.append(\n          generateGlobalInjectorCode({\n            release: await releaseNamePromise,\n            injectReleasesMap: options.injectReleasesMap,\n            injectBuildInformation: options._experiments.injectBuildInformation || false,\n            org: options.org,\n            project: options.project,\n          })\n        );\n      } else {\n        // Appending instead of prepending has less probability of mucking with user's source maps.\n        // Luckily import statements get hoisted to the top anyways.\n        // The import needs to be an absolute path because Rollup doesn't bundle stuff in `node_modules` by default when bundling CJS (unless the import path is absolute or the node-resolve-plugin is used).\n        ms.append(`;\\nimport \"${releaseInjectionFilePath.replace(/\\\\/g, \"\\\\\\\\\")}\";`);\n      }\n\n      if (unpluginMetaContext.framework === \"esbuild\") {\n        // esbuild + unplugin is buggy at the moment when we return an object with a `map` (sourcemap) property.\n        // Currently just returning a string here seems to work and even correctly sourcemaps the code we generate.\n        // However, other bundlers need the `map` property\n        return ms.toString();\n      } else {\n        return {\n          code: ms.toString(),\n          map: ms.generateMap(),\n        };\n      }\n    },\n\n    /**\n     * Responsible for executing the sentry release creation pipeline (i.e. creating a release on\n     * Sentry.io, uploading sourcemaps, associating commits and deploys and finalizing the release)\n     */\n    async writeBundle() {\n      logger.debug('Called \"writeBundle\"');\n\n      releaseInjectionSpan?.finish();\n      const releasePipelineSpan =\n        transaction &&\n        addSpanToTransaction(\n          { hub: sentryHub, parentSpan: transaction, logger, cli },\n          \"function.plugin.release\",\n          \"Release pipeline\"\n        );\n\n      sentryHub.addBreadcrumb({\n        category: \"writeBundle:start\",\n        level: \"info\",\n      });\n\n      const ctx: BuildContext = { hub: sentryHub, parentSpan: releasePipelineSpan, logger, cli };\n\n      const releaseName = await releaseNamePromise;\n\n      let tmpUploadFolder: string | undefined;\n\n      try {\n        if (!unpluginMetaContext.watchMode) {\n          if (options.sourcemaps?.assets) {\n            const debugIdChunkFilePaths = (\n              await glob(options.sourcemaps.assets, {\n                absolute: true,\n                nodir: true,\n                ignore: options.sourcemaps.ignore,\n              })\n            ).filter((p) => p.endsWith(\".js\") || p.endsWith(\".mjs\") || p.endsWith(\".cjs\"));\n\n            if (unpluginMetaContext.framework === \"esbuild\") {\n              await Promise.all(\n                debugIdChunkFilePaths.map(async (debugIdChunkFilePath) => {\n                  const chunkFileContents = await promisify(fs.readFile)(\n                    debugIdChunkFilePath,\n                    \"utf-8\"\n                  );\n\n                  const debugId = stringToUUID(chunkFileContents);\n\n                  const newChunkFileContents = chunkFileContents.replace(\n                    /__SENTRY_DEBUG_ID__/g,\n                    debugId\n                  );\n\n                  await promisify(fs.writeFile)(\n                    debugIdChunkFilePath,\n                    newChunkFileContents,\n                    \"utf-8\"\n                  );\n                })\n              );\n            }\n\n            const sourceFileUploadFolderPromise = promisify(fs.mkdtemp)(\n              path.join(os.tmpdir(), \"sentry-bundler-plugin-upload-\")\n            );\n\n            await Promise.all(\n              debugIdChunkFilePaths.map(async (chunkFilePath, chunkIndex): Promise<void> => {\n                await prepareBundleForDebugIdUpload(\n                  chunkFilePath,\n                  await sourceFileUploadFolderPromise,\n                  String(chunkIndex),\n                  logger\n                );\n              })\n            );\n\n            tmpUploadFolder = await sourceFileUploadFolderPromise;\n            await uploadDebugIdSourcemaps(options, ctx, tmpUploadFolder, releaseName);\n          }\n\n          await createNewRelease(options, ctx, releaseName);\n          await cleanArtifacts(options, ctx, releaseName);\n          await uploadSourceMaps(options, ctx, releaseName);\n          await setCommits(options, ctx, releaseName);\n          await finalizeRelease(options, ctx, releaseName);\n          await addDeploy(options, ctx, releaseName);\n        }\n        transaction?.setStatus(\"ok\");\n      } catch (e: unknown) {\n        transaction?.setStatus(\"cancelled\");\n        sentryHub.addBreadcrumb({\n          level: \"error\",\n          message: \"Error during writeBundle\",\n        });\n        handleError(e, logger, options.errorHandler);\n      } finally {\n        if (tmpUploadFolder) {\n          fs.rm(tmpUploadFolder, { recursive: true, force: true }, () => {\n            // We don't care if this errors\n          });\n        }\n        releasePipelineSpan?.finish();\n        transaction?.finish();\n        await sentryClient.flush().then(null, () => {\n          logger.warn(\"Sending of telemetry failed\");\n        });\n      }\n\n      sentryHub.addBreadcrumb({\n        category: \"writeBundle:finish\",\n        level: \"info\",\n      });\n    },\n    rollup: {\n      renderChunk(code, chunk) {\n        if (\n          options.sourcemaps?.assets &&\n          [\".js\", \".mjs\", \".cjs\"].some((ending) => chunk.fileName.endsWith(ending)) // chunks could be any file (html, md, ...)\n        ) {\n          return injectDebugIdSnippetIntoChunk(code);\n        } else {\n          return null; // returning null means not modifying the chunk at all\n        }\n      },\n    },\n    vite: {\n      renderChunk(code, chunk) {\n        if (\n          options.sourcemaps?.assets &&\n          [\".js\", \".mjs\", \".cjs\"].some((ending) => chunk.fileName.endsWith(ending)) // chunks could be any file (html, md, ...)\n        ) {\n          return injectDebugIdSnippetIntoChunk(code);\n        } else {\n          return null; // returning null means not modifying the chunk at all\n        }\n      },\n    },\n    webpack(compiler) {\n      if (options.sourcemaps?.assets) {\n        // Cache inspired by https://github.com/webpack/webpack/pull/15454\n        const cache = new WeakMap<sources.Source, sources.Source>();\n\n        compiler.hooks.compilation.tap(\"sentry-plugin\", (compilation) => {\n          compilation.hooks.optimizeChunkAssets.tap(\"sentry-plugin\", (chunks) => {\n            chunks.forEach((chunk) => {\n              const fileNames = chunk.files;\n              fileNames.forEach((fileName) => {\n                const source = compilation.assets[fileName];\n\n                if (!source) {\n                  logger.warn(\n                    \"Unable to access compilation assets. If you see this warning, it is likely a bug in the Sentry webpack plugin. Feel free to open an issue at https://github.com/getsentry/sentry-javascript-bundler-plugins with reproduction steps.\"\n                  );\n                  return;\n                }\n\n                compilation.updateAsset(fileName, (oldSource) => {\n                  const cached = cache.get(oldSource);\n                  if (cached) {\n                    return cached;\n                  }\n\n                  const originalCode = source.source().toString();\n\n                  // The source map type is very annoying :(\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                  const originalSourceMap = source.map() as any;\n\n                  const { code: newCode, map: newSourceMap } = injectDebugIdSnippetIntoChunk(\n                    originalCode,\n                    fileName\n                  );\n\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                  newSourceMap.sources = originalSourceMap.sources as string[];\n\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                  newSourceMap.sourcesContent = originalSourceMap.sourcesContent as string[];\n\n                  const newSource = new webpackSources.SourceMapSource(\n                    newCode,\n                    fileName,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    originalSourceMap,\n                    originalCode,\n                    newSourceMap,\n                    false\n                  ) as sources.Source;\n\n                  cache.set(oldSource, newSource);\n\n                  return newSource;\n                });\n              });\n            });\n          });\n        });\n      }\n    },\n  });\n\n  if (unpluginMetaContext.framework === \"esbuild\") {\n    if (options.sourcemaps?.assets) {\n      plugins.push({\n        name: \"sentry-esbuild-debug-id-plugin\",\n        esbuild: {\n          setup({ initialOptions }) {\n            initialOptions.inject = initialOptions.inject || [];\n            initialOptions.inject.push(esbuildDebugIdInjectionFilePath);\n          },\n        },\n      });\n    }\n  }\n\n  return plugins;\n});\n\nfunction handleError(\n  unknownError: unknown,\n  logger: Logger,\n  errorHandler: NormalizedOptions[\"errorHandler\"]\n) {\n  if (unknownError instanceof Error) {\n    logger.error(unknownError.message);\n  } else {\n    logger.error(String(unknownError));\n  }\n\n  if (errorHandler) {\n    if (unknownError instanceof Error) {\n      errorHandler(unknownError);\n    } else {\n      errorHandler(new Error(\"An unknown error occured\"));\n    }\n  } else {\n    throw unknownError;\n  }\n}\n\n/**\n * Generates code for the global injector which is responsible for setting the global\n * `SENTRY_RELEASE` & `SENTRY_BUILD_INFO` variables.\n */\nfunction generateGlobalInjectorCode({\n  release,\n  injectReleasesMap,\n  injectBuildInformation,\n  org,\n  project,\n}: {\n  release: string;\n  injectReleasesMap: boolean;\n  injectBuildInformation: boolean;\n  org?: string;\n  project?: string;\n}) {\n  // The code below is mostly ternary operators because it saves bundle size.\n  // The checks are to support as many environments as possible. (Node.js, Browser, webworkers, etc.)\n  let code = `\n    var _global =\n      typeof window !== 'undefined' ?\n        window :\n        typeof global !== 'undefined' ?\n          global :\n          typeof self !== 'undefined' ?\n            self :\n            {};\n\n    _global.SENTRY_RELEASE={id:\"${release}\"};`;\n\n  if (injectReleasesMap && project) {\n    const key = org ? `${project}@${org}` : project;\n    code += `\n      _global.SENTRY_RELEASES=_global.SENTRY_RELEASES || {};\n      _global.SENTRY_RELEASES[\"${key}\"]={id:\"${release}\"};`;\n  }\n\n  if (injectBuildInformation) {\n    const buildInfo = getBuildInformation();\n\n    code += `\n      _global.SENTRY_BUILD_INFO=${JSON.stringify(buildInfo)};`;\n  }\n\n  return code;\n}\n\nexport function getBuildInformation() {\n  const packageJson = getPackageJson();\n\n  const { deps, depsVersions } = packageJson\n    ? getDependencies(packageJson)\n    : { deps: [], depsVersions: {} };\n\n  return {\n    deps,\n    depsVersions,\n    nodeVersion: parseMajorVersion(process.version),\n  };\n}\n\n/**\n * Determines whether the Sentry CLI binary is in its expected location.\n * This function is useful since `@sentry/cli` installs the binary via a post-install\n * script and post-install scripts may not always run. E.g. with `npm i --ignore-scripts`.\n */\nexport function sentryCliBinaryExists(): boolean {\n  return fs.existsSync(SentryCli.getPath());\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const sentryVitePlugin: (options: Options) => any = unplugin.vite;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const sentryRollupPlugin: (options: Options) => any = unplugin.rollup;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const sentryWebpackPlugin: (options: Options) => any = unplugin.webpack;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const sentryEsbuildPlugin: (options: Options) => any = unplugin.esbuild;\n\nexport type { Options } from \"./types\";\n"],"names":["arrayify","maybeArray","Array","isArray","getPackageJson","cwd","stopAt","lookupPackageJson","process","path","normalize","os","homedir","parseMajorVersion","version","startsWith","slice","regex","match","parseInt","coerced","Number","isNaN","gteLteRegex","gteLteMatch","ltRegex","ltMatch","major","gtRegex","gtMatch","undefined","PACKAGES_TO_INCLUDE_VERSION","getDependencies","packageJson","dependencies","Object","assign","deps","keys","sort","depsVersions","reduce","depName","includes","majorVersion","jsonPath","findUp","sync","dirName","stop","exists","jsonStr","fs","readFileSync","json","JSON","parse","error","newCwd","dirname","resolve","stringToUUID","str","md5sum","crypto","createHash","update","md5Hash","digest","substring","toLowerCase","SENTRY_SAAS_URL","normalizeUserOptions","userOptions","options","include","normalizeInclude","org","env","project","release","url","finalize","cleanArtifacts","dryRun","debug","silent","telemetry","injectReleasesMap","injectRelease","uploadSourceMaps","sourcemaps","_experiments","authToken","headers","vcsRemote","setCommits","deploy","releaseInjectionTargets","normalizeReleaseInjectionTargets","dist","errorHandler","configFile","userReleaseInjectionTargets","map","includeItem","paths","userIncludeEntry","normalizeIncludeEntry","includeEntry","ignoreOption","ignore","ext","dotPrefixedExt","extension","replace","ignoreFile","urlPrefix","urlSuffix","stripPrefix","stripCommonPrefix","sourceMapReference","rewrite","validate","validateOptions","logger","auto","repo","commit","warn","SENTRY_SAAS_HOSTNAME","makeSentryClient","dsn","allowedToSendTelemetryPromise","userProject","client","NodeClient","tracesSampleRate","sampleRate","integrations","tracePropagationTargets","stackParser","defaultStackParser","beforeSend","event","exception","values","forEach","stacktrace","server_name","beforeSendTransaction","transport","nodeTransportOptions","nodeTransport","makeNodeTransport","flush","timeout","send","request","isAllowedToSend","hub","Hub","sentryClient","sentryHub","addSpanToTransaction","ctx","op","description","parentSpan","actualSpan","getScope","getTransaction","span","startChild","configureScope","scope","setSpan","addPluginOptionInformationToHub","bundler","setTag","length","assets","setTags","organization","setUser","id","shouldSendTelemetry","cli","SentryCli","execute","cliInfo","Error","cliInfoUrl","split","trim","URL","hostname","createNewRelease","releaseName","releases","captureException","finish","addBreadcrumb","level","message","info","uploadDebugIdSourcemaps","folderPathToUpload","useArtifactBundle","previousCommit","ignoreMissing","ignoreEmpty","finalizeRelease","addDeploy","started","finished","time","name","newDeploy","createLogger","params","console","log","prefix","getSentryCli","internalOptions","getDryRunCLI","proposeVersion","then","Promise","config","args","live","DEBUG_ID_INJECTOR_SNIPPET","injectDebugIdSnippetIntoChunk","code","filename","debugId","ms","MagicString","codeToInject","commentUseStrictRegex","prepend","toString","generateMap","prepareBundleForDebugIdUpload","bundleFilePath","uploadFolder","uniqueUploadName","util","promisify","readFile","bundleContent","determineDebugIdFromBundleSource","writeSourceFilePromise","writeFile","join","writeSourceMapFilePromise","determineSourceMapPathFromBundle","sourceMapPath","prepareSourceMapForDebugIdUpload","all","bundlePath","bundleSource","sourceMappingUrlMatch","sourceMappingUrl","isAbsolute","adjacentSourceMapFilePath","access","targetPath","encoding","sourceMapFileContent","stringify","ALLOWED_TRANSFORMATION_FILE_ENDINGS","require","createRequire","import","releaseInjectionFilePath","esbuildDebugIdInjectionFilePath","unplugin","createUnplugin","unpluginMetaContext","framework","makeMain","handleError","releaseNamePromise","transaction","releaseInjectionSpan","plugins","push","enforce","buildStart","isAllowedToSendToSendTelemetry","startTransaction","resolveId","importer","isEntry","transformInclude","normalizedId","some","entry","RegExp","test","normalizedEntry","pathIsOrdinary","pathHasAllowedFileEnding","allowedFileEnding","endsWith","transform","generateGlobalInjectorCode","injectBuildInformation","append","writeBundle","releasePipelineSpan","category","watchMode","glob","absolute","nodir","debugIdChunkFilePaths","filter","p","debugIdChunkFilePath","chunkFileContents","newChunkFileContents","sourceFileUploadFolderPromise","mkdtemp","tmpdir","chunkFilePath","chunkIndex","String","tmpUploadFolder","setStatus","rm","recursive","force","rollup","renderChunk","chunk","ending","fileName","vite","webpack","compiler","cache","WeakMap","hooks","compilation","tap","optimizeChunkAssets","chunks","fileNames","files","source","updateAsset","oldSource","cached","get","originalCode","originalSourceMap","newCode","newSourceMap","sources","sourcesContent","newSource","webpackSources","SourceMapSource","set","esbuild","setup","initialOptions","inject","unknownError","key","buildInfo","getBuildInformation","nodeVersion","sentryCliBinaryExists","existsSync","getPath","sentryVitePlugin","sentryRollupPlugin","sentryWebpackPlugin","sentryEsbuildPlugin"],"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"}