var asyncSome=async(arr,predicate)=>{for(let e of arr)if(await predicate(e))return e};import{JsonRpcProvider,StaticJsonRpcProvider,Web3Provider}from"@ethersproject/providers";import{Signer}from"ethers";var parseProviderOrSigner=async providerOrSigner=>{let signer,provider,providerNetwork;if(providerOrSigner&&(providerOrSigner instanceof JsonRpcProvider||providerOrSigner instanceof Web3Provider||providerOrSigner instanceof StaticJsonRpcProvider)){let accounts=await providerOrSigner.listAccounts();accounts&&accounts.length>0&&(signer=providerOrSigner.getSigner()),provider=providerOrSigner,providerNetwork=await providerOrSigner.getNetwork()}return!signer&&providerOrSigner instanceof Signer&&(signer=providerOrSigner,provider=signer.provider,providerNetwork=provider&&await provider.getNetwork()),{signer,provider,providerNetwork}};export{asyncSome,parseProviderOrSigner};
//# sourceMappingURL=chunk-ABR2QVOF.js.map
