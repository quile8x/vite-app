import { FC } from 'react';
/**
 * #### Summary
 * A hook that gets you the current blocknumber via react context
 * - can be shared by your whole app.
 *
 * #### Use
 * Make sure to wrap your main app with the {@link EthersAppContext}.
 * - See [scaffold-eth-typescript example](https://github.com/scaffold-eth/scaffold-eth-typescript/blob/0225179a2a8bb7b3a255d6eff4802b47d72809dd/packages/vite-app-ts/src/components/routes/App.tsx#L38)
 *
 *
 * #### Notes
 * - this extensively used by eth-hooks to trigger hooks when a new block arrives
 * - uses the current provider {@link ethersProvider} from {@link useEthersContext}
 *
 * @category EthersContext
 *
 * @returns current block number
 */
export declare const useBlockNumberContext: () => number;
interface IProps {
    providerKey?: string;
}
/**
 * #### Summary
 * A context that works with {@link useBlockNumberContext} to give access to the current provider's block number in any place in your app
 *
 * @category EthersContext
 *
 * @param props
 * @returns
 */
export declare const BlockNumberContext: FC<IProps>;
export {};
//# sourceMappingURL=BlockNumberContext.d.ts.map