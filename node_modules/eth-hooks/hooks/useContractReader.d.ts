import { BaseContract } from 'ethers';
import { TContractFunctionInfo } from "../models";
/**
 * #### Summary
 * Enables you to call a contract function with arguments and receive the output.  You can use this to easily track of contract outputs in react states
 *
 * #### Notes
 * - uses the ethers.Contract object's provider to access the network
 * - formatter is a function that can change the format of the output
 *
 * @category Hooks
 *
 * @template OutputT return type
 * @param contract ethers.Contract class
 * @param contractFunctionInfo
 * @param formatter <OutputT> a function that can format the output
 * @param onChange callback with result as a parameter
 * @returns <OutputT>
 */
export declare const useContractReader: <OutputT>(contract: BaseContract, contractFunctionInfo: TContractFunctionInfo, formatter?: ((_value: OutputT | undefined) => OutputT) | undefined, onChange?: ((_value?: OutputT | undefined) => void) | undefined) => OutputT | undefined;
//# sourceMappingURL=useContractReader.d.ts.map