import { ICoreOptions, ThemeColors } from 'web3modal';
import "../helpers/__global";
import { TEthersProvider } from "../models";
/**
 * The current state of Web3Modal
 *
 * @category Hooks
 */
export declare type TWeb3ModalState = {
    /**
     * Is the modal initalizing
     */
    initializing: boolean;
    /**
     * A callback to open the modal
     */
    openWeb3ModalCallback: () => void;
    /**
     * A callback to close the modal
     */
    logoutOfWeb3ModalCallback: () => void;
    /**
     * A callback to change the modal theme
     */
    updateWeb3ModalThemeCallback: (theme: ThemeColors | string) => void;
};
/**
 * #### Summary
 * A hook that makes it easy to interact and use [web3Modal](https://github.com/Web3Modal/web3modal)
 * - provides callback to open, logout and update the modal theme
 *
 * #### Notes
 * - ü§öüèΩ Consider using the context provider {@link ethersProvider} and {@link EthersModalConnector} instead.
 *
 * @category Hooks
 *
 * @param web3ModalConfig
 * @param setCurrentEthersProvider
 * @returns
 */
export declare const useWeb3Modal: (web3ModalConfig: Partial<ICoreOptions>, setCurrentEthersProvider: (newEthersProvider: TEthersProvider | undefined) => void) => TWeb3ModalState;
//# sourceMappingURL=useWeb3Modal.d.ts.map