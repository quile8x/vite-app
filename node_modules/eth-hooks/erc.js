import{useOnRepetition}from"./chunk-PNTNPJDE.js";import{useEthersContext}from"./chunk-SZO3HXET.js";import"./chunk-ABR2QVOF.js";import"./chunk-7TNBWNRY.js";import"./chunk-MTWSNRX5.js";import"./chunk-EHDKCTCW.js";import{BigNumber}from"@ethersproject/bignumber";import{useCallback,useState}from"react";import{useIsMounted}from"usehooks-ts";var zero=BigNumber.from(0),useTokenBalance=(contract,address,pollTime=0)=>{let isMounted=useIsMounted(),[balance,setBalance]=useState(zero),ethersContext=useEthersContext(),callFunc=useCallback(async()=>{var _a,_b,_c;if(contract!=null)try{let contractChainId=await((_a=contract==null?void 0:contract.signer)==null?void 0:_a.getChainId());if(ethersContext.chainId===contractChainId){let newBalance=(_c=await((_b=contract==null?void 0:contract.balanceOf)==null?void 0:_b.call(contract,address)))!=null?_c:zero;isMounted()&&setBalance(value=>value.toHexString()!==newBalance.toHexString()?newBalance:value)}}catch(e){console.log("\u26A0 Could not get token balance",e)}},[address,contract,ethersContext.chainId,isMounted]);return useOnRepetition(callFunc,{pollTime,leadingTrigger:(contract==null?void 0:contract.provider)!=null,provider:contract.provider}),balance};export{useTokenBalance};
//# sourceMappingURL=erc.js.map
