import { useEffect } from 'react';
import { useLocalStorage } from '../useLocalStorage';
var COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';
function useDarkMode(defaultValue) {
    var getPrefersScheme = function () {
        if (typeof window !== 'undefined') {
            return window.matchMedia(COLOR_SCHEME_QUERY).matches;
        }
        return !!defaultValue;
    };
    var _a = useLocalStorage('darkMode', getPrefersScheme()), isDarkMode = _a[0], setDarkMode = _a[1];
    useEffect(function () {
        var handler = function () { return setDarkMode(getPrefersScheme); };
        var matchMedia = window.matchMedia(COLOR_SCHEME_QUERY);
        matchMedia.addEventListener('change', handler);
        return function () {
            matchMedia.removeEventListener('change', handler);
        };
    }, []);
    return {
        isDarkMode: isDarkMode,
        toggle: function () { return setDarkMode(function (prev) { return !prev; }); },
        enable: function () { return setDarkMode(true); },
        disable: function () { return setDarkMode(false); },
    };
}
export default useDarkMode;
//# sourceMappingURL=useDarkMode.js.map