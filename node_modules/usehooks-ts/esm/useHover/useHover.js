import { useEffect, useState } from 'react';
function useHover(elementRef) {
    var _a = useState(false), value = _a[0], setValue = _a[1];
    var handleMouseEnter = function () { return setValue(true); };
    var handleMouseLeave = function () { return setValue(false); };
    useEffect(function () {
        var node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
        if (node) {
            node.addEventListener('mouseenter', handleMouseEnter);
            node.addEventListener('mouseleave', handleMouseLeave);
            return function () {
                node.removeEventListener('mouseenter', handleMouseEnter);
                node.removeEventListener('mouseleave', handleMouseLeave);
            };
        }
    }, [elementRef]);
    return value;
}
export default useHover;
//# sourceMappingURL=useHover.js.map