import { useCallback, useEffect, useState } from 'react';
import { useEventListener } from '../useEventListener';
function useElementSize(elementRef) {
    var _a = useState({
        width: 0,
        height: 0,
    }), size = _a[0], setSize = _a[1];
    var updateSize = useCallback(function () {
        var node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
        if (node) {
            setSize({
                width: node.offsetWidth || 0,
                height: node.offsetHeight || 0,
            });
        }
    }, [elementRef]);
    useEffect(function () {
        updateSize();
    }, []);
    useEventListener('resize', updateSize);
    return size;
}
export default useElementSize;
//# sourceMappingURL=useElementSize.js.map