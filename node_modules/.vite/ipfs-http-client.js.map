{
  "version": 3,
  "sources": ["../multiformats/esm/vendor/varint.js", "../multiformats/esm/src/varint.js", "../multiformats/esm/src/bytes.js", "../multiformats/esm/src/hashes/digest.js", "../multiformats/esm/vendor/base-x.js", "../multiformats/esm/src/bases/base.js", "../multiformats/esm/src/bases/base58.js", "../multiformats/esm/src/bases/base32.js", "../multiformats/esm/src/cid.js", "../multiformats/esm/src/hashes/hasher.js", "../multiformats/esm/src/hashes/identity.js", "../multiformats/esm/src/bases/identity.js", "../multiformats/esm/src/bases/base2.js", "../multiformats/esm/src/bases/base8.js", "../multiformats/esm/src/bases/base10.js", "../multiformats/esm/src/bases/base16.js", "../multiformats/esm/src/bases/base36.js", "../multiformats/esm/src/bases/base64.js", "../multiformats/esm/src/hashes/sha2-browser.js", "../multiformats/esm/src/codecs/raw.js", "../multiformats/esm/src/codecs/json.js", "../multiformats/esm/src/index.js", "../multiformats/esm/src/basics.js", "../ip-regex/index.js", "../is-ip/index.js", "../uint8arrays/esm/src/util/bases.js", "../uint8arrays/esm/src/to-string.js", "../multiaddr/src/ip.js", "../multiaddr/src/protocols-table.js", "../multiaddr/node_modules/varint/encode.js", "../multiaddr/node_modules/varint/decode.js", "../multiaddr/node_modules/varint/length.js", "../multiaddr/node_modules/varint/index.js", "../uint8arrays/esm/src/from-string.js", "../uint8arrays/esm/src/concat.js", "../multiaddr/src/convert.js", "../multiaddr/src/codec.js", "../err-code/index.js", "../uint8arrays/esm/src/equals.js", "../multiaddr/src/index.js", "../is-electron/index.js", "../ipfs-utils/src/env.js", "../debug/node_modules/ms/index.js", "../debug/src/common.js", "../debug/src/browser.js", "../ipfs-utils/src/http/error.js", "../.vite-plugin-externals/electron-fetch.js", "../http-browserify/lib/response.js", "../Base64/base64.js", "../http-browserify/lib/request.js", "../url/node_modules/punycode/punycode.js", "../url/util.js", "../url/url.js", "../http-browserify/index.js", "browser-external:zlib", "../safer-buffer/safer.js", "../encoding/node_modules/iconv-lite/lib/bom-handling.js", "../encoding/node_modules/iconv-lite/encodings/internal.js", "../encoding/node_modules/iconv-lite/encodings/utf32.js", "../encoding/node_modules/iconv-lite/encodings/utf16.js", "../encoding/node_modules/iconv-lite/encodings/utf7.js", "../encoding/node_modules/iconv-lite/encodings/sbcs-codec.js", "../encoding/node_modules/iconv-lite/encodings/sbcs-data.js", "../encoding/node_modules/iconv-lite/encodings/sbcs-data-generated.js", "../encoding/node_modules/iconv-lite/encodings/dbcs-codec.js", "../encoding/node_modules/iconv-lite/encodings/dbcs-data.js", "../encoding/node_modules/iconv-lite/encodings/index.js", "../encoding/node_modules/iconv-lite/lib/streams.js", "../encoding/node_modules/iconv-lite/lib/index.js", "../encoding/lib/encoding.js", "../node-fetch/lib/index.mjs", "../native-fetch/src/index.js", "../ipfs-utils/src/fetch.js", "../ipfs-utils/src/http/fetch.browser.js", "../merge-options/node_modules/is-plain-obj/index.js", "../merge-options/index.js", "../iso-url/src/url-browser.js", "../iso-url/src/relative.js", "../iso-url/index.js", "../abort-controller/browser.js", "../native-abort-controller/src/index.js", "../any-signal/index.js", "../ipfs-utils/src/http.js", "../multiaddr-to-uri/index.js", "../it-peekable/index.js", "../browser-readablestream-to-it/index.js", "../it-all/index.js", "../it-map/index.js", "../@protobufjs/aspromise/index.js", "../@protobufjs/base64/index.js", "../@protobufjs/eventemitter/index.js", "../@protobufjs/float/index.js", "../@protobufjs/inquire/index.js", "../@protobufjs/utf8/index.js", "../@protobufjs/pool/index.js", "../protobufjs/src/util/longbits.js", "../protobufjs/src/util/minimal.js", "../protobufjs/src/writer.js", "../protobufjs/src/writer_buffer.js", "../protobufjs/src/reader.js", "../protobufjs/src/reader_buffer.js", "../protobufjs/src/rpc/service.js", "../protobufjs/src/rpc.js", "../protobufjs/src/roots.js", "../protobufjs/src/index-minimal.js", "../protobufjs/minimal.js", "../it-first/index.js", "../it-last/index.js", "../stream-to-it/source.js", "../blob-to-it/index.js", "../ipfs-utils/src/files/url-source.js", "dep:ipfs-http-client", "../ipfs-http-client/esm/src/index.js", "../ipfs-core-utils/esm/src/multibases.js", "../ipfs-core-utils/esm/src/multicodecs.js", "../ipfs-core-utils/esm/src/multihashes.js", "../@ipld/dag-pb/esm/src/index.js", "../@ipld/dag-pb/esm/src/pb-decode.js", "../@ipld/dag-pb/esm/src/pb-encode.js", "../@ipld/dag-pb/esm/src/util.js", "../@ipld/dag-cbor/esm/index.js", "../cborg/esm/cborg.js", "../cborg/esm/lib/encode.js", "../cborg/esm/lib/is.js", "../cborg/esm/lib/token.js", "../cborg/esm/lib/bl.js", "../cborg/esm/lib/byte-utils.js", "../cborg/esm/lib/common.js", "../cborg/esm/lib/jump.js", "../cborg/esm/lib/0uint.js", "../cborg/esm/lib/1negint.js", "../cborg/esm/lib/2bytes.js", "../cborg/esm/lib/3string.js", "../cborg/esm/lib/4array.js", "../cborg/esm/lib/5map.js", "../cborg/esm/lib/6tag.js", "../cborg/esm/lib/7float.js", "../cborg/esm/lib/decode.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/cid.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/varint.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/vendor/varint.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/hashes/digest.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/bytes.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/bases/base58.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/bases/base.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/vendor/base-x.js", "../@ipld/dag-cbor/node_modules/multiformats/esm/src/bases/base32.js", "../@ipld/dag-json/esm/index.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/index.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/cid.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/varint.js", "../@ipld/dag-json/node_modules/multiformats/esm/vendor/varint.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/hashes/digest.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/bytes.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/bases/base58.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/bases/base.js", "../@ipld/dag-json/node_modules/multiformats/esm/vendor/base-x.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/bases/base32.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/hashes/hasher.js", "../@ipld/dag-json/node_modules/multiformats/esm/src/bases/base64.js", "../cborg/esm/lib/json/json.js", "../cborg/esm/lib/json/encode.js", "../cborg/esm/lib/json/decode.js", "../ipfs-http-client/esm/src/bitswap/index.js", "../ipfs-http-client/esm/src/bitswap/wantlist.js", "../ipfs-http-client/esm/src/lib/configure.js", "../ipfs-http-client/esm/src/lib/core.js", "../parse-duration/index.mjs", "../ipfs-core-utils/esm/src/to-url-string.js", "../ipfs-core-utils/esm/src/agent.browser.js", "../ipfs-http-client/esm/src/lib/to-url-search-params.js", "../ipfs-http-client/esm/src/lib/mode-to-string.js", "../ipfs-http-client/esm/src/lib/parse-mtime.js", "../ipfs-http-client/esm/src/bitswap/wantlist-for-peer.js", "../ipfs-http-client/esm/src/bitswap/stat.js", "../ipfs-http-client/esm/src/bitswap/unwant.js", "../ipfs-http-client/esm/src/block/index.js", "../ipfs-http-client/esm/src/block/get.js", "../ipfs-http-client/esm/src/block/put.js", "../ipfs-core-utils/esm/src/multipart-request.browser.js", "../ipfs-core-utils/esm/src/files/normalise-input-multiple.browser.js", "../ipfs-core-utils/esm/src/files/normalise-content.browser.js", "../ipfs-core-utils/esm/src/files/utils.js", "../ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js", "../ipfs-unixfs/esm/src/index.js", "../ipfs-unixfs/esm/src/unixfs.js", "../ipfs-core-utils/esm/src/mode-to-string.js", "../ipfs-http-client/esm/src/lib/abort-signal.js", "../ipfs-http-client/esm/src/block/rm.js", "../ipfs-http-client/esm/src/block/stat.js", "../ipfs-http-client/esm/src/bootstrap/index.js", "../ipfs-http-client/esm/src/bootstrap/add.js", "../ipfs-http-client/esm/src/bootstrap/clear.js", "../ipfs-http-client/esm/src/bootstrap/list.js", "../ipfs-http-client/esm/src/bootstrap/reset.js", "../ipfs-http-client/esm/src/bootstrap/rm.js", "../ipfs-http-client/esm/src/config/index.js", "../ipfs-http-client/esm/src/config/profiles/index.js", "../ipfs-http-client/esm/src/config/profiles/apply.js", "../ipfs-http-client/esm/src/config/profiles/list.js", "../ipfs-http-client/esm/src/lib/object-to-camel.js", "../ipfs-http-client/esm/src/config/get.js", "../ipfs-http-client/esm/src/config/get-all.js", "../ipfs-http-client/esm/src/config/replace.js", "../ipfs-http-client/esm/src/config/set.js", "../ipfs-http-client/esm/src/dag/index.js", "../ipfs-http-client/esm/src/dag/export.js", "../ipfs-http-client/esm/src/dag/get.js", "../ipfs-http-client/esm/src/lib/resolve.js", "../ipfs-http-client/esm/src/dag/import.js", "../ipfs-http-client/esm/src/dag/put.js", "../ipfs-http-client/esm/src/dag/resolve.js", "../ipfs-http-client/esm/src/dht/index.js", "../ipfs-http-client/esm/src/dht/find-peer.js", "../ipfs-http-client/esm/src/dht/map-event.js", "../ipfs-http-client/esm/src/dht/response-types.js", "../ipfs-http-client/esm/src/dht/find-provs.js", "../ipfs-http-client/esm/src/dht/get.js", "../ipfs-http-client/esm/src/dht/provide.js", "../ipfs-http-client/esm/src/dht/put.js", "../ipfs-http-client/esm/src/dht/query.js", "../ipfs-http-client/esm/src/diag/index.js", "../ipfs-http-client/esm/src/diag/cmds.js", "../ipfs-http-client/esm/src/diag/net.js", "../ipfs-http-client/esm/src/diag/sys.js", "../ipfs-http-client/esm/src/files/index.js", "../ipfs-http-client/esm/src/files/chmod.js", "../ipfs-http-client/esm/src/files/cp.js", "../ipfs-http-client/esm/src/files/flush.js", "../ipfs-http-client/esm/src/files/ls.js", "../ipfs-http-client/esm/src/lib/object-to-camel-with-metadata.js", "../ipfs-http-client/esm/src/files/mkdir.js", "../ipfs-http-client/esm/src/files/mv.js", "../ipfs-http-client/esm/src/files/read.js", "../ipfs-http-client/esm/src/files/rm.js", "../ipfs-http-client/esm/src/files/stat.js", "../ipfs-http-client/esm/src/files/touch.js", "../ipfs-http-client/esm/src/files/write.js", "../ipfs-http-client/esm/src/key/index.js", "../ipfs-http-client/esm/src/key/export.js", "../ipfs-http-client/esm/src/key/gen.js", "../ipfs-http-client/esm/src/key/import.js", "../ipfs-http-client/esm/src/key/info.js", "../ipfs-http-client/esm/src/key/list.js", "../ipfs-http-client/esm/src/key/rename.js", "../ipfs-http-client/esm/src/key/rm.js", "../ipfs-http-client/esm/src/log/index.js", "../ipfs-http-client/esm/src/log/level.js", "../ipfs-http-client/esm/src/log/ls.js", "../ipfs-http-client/esm/src/log/tail.js", "../ipfs-http-client/esm/src/name/index.js", "../ipfs-http-client/esm/src/name/publish.js", "../ipfs-http-client/esm/src/name/resolve.js", "../ipfs-http-client/esm/src/name/pubsub/index.js", "../ipfs-http-client/esm/src/name/pubsub/cancel.js", "../ipfs-http-client/esm/src/name/pubsub/state.js", "../ipfs-http-client/esm/src/name/pubsub/subs.js", "../ipfs-http-client/esm/src/object/index.js", "../ipfs-http-client/esm/src/object/data.js", "../ipfs-http-client/esm/src/object/get.js", "../ipfs-http-client/esm/src/object/links.js", "../ipfs-http-client/esm/src/object/new.js", "../ipfs-http-client/esm/src/object/put.js", "../ipfs-http-client/esm/src/object/stat.js", "../ipfs-http-client/esm/src/object/patch/index.js", "../ipfs-http-client/esm/src/object/patch/add-link.js", "../ipfs-http-client/esm/src/object/patch/append-data.js", "../ipfs-http-client/esm/src/object/patch/rm-link.js", "../ipfs-http-client/esm/src/object/patch/set-data.js", "../ipfs-http-client/esm/src/pin/index.js", "../ipfs-http-client/esm/src/pin/add-all.js", "../ipfs-core-utils/esm/src/pins/normalise-input.js", "../ipfs-http-client/esm/src/pin/add.js", "../ipfs-http-client/esm/src/pin/ls.js", "../ipfs-http-client/esm/src/pin/rm-all.js", "../ipfs-http-client/esm/src/pin/rm.js", "../ipfs-http-client/esm/src/pin/remote/index.js", "../ipfs-http-client/esm/src/pin/remote/add.js", "../ipfs-http-client/esm/src/pin/remote/utils.js", "../ipfs-http-client/esm/src/pin/remote/ls.js", "../ipfs-http-client/esm/src/pin/remote/rm.js", "../ipfs-http-client/esm/src/pin/remote/rm-all.js", "../ipfs-http-client/esm/src/pin/remote/service/index.js", "../ipfs-http-client/esm/src/pin/remote/service/add.js", "../ipfs-http-client/esm/src/pin/remote/service/utils.js", "../ipfs-http-client/esm/src/pin/remote/service/ls.js", "../ipfs-http-client/esm/src/pin/remote/service/rm.js", "../ipfs-http-client/esm/src/pubsub/index.js", "../ipfs-http-client/esm/src/pubsub/ls.js", "../ipfs-http-client/esm/src/lib/http-rpc-wire-format.js", "../ipfs-http-client/esm/src/pubsub/peers.js", "../ipfs-http-client/esm/src/pubsub/publish.js", "../ipfs-http-client/esm/src/pubsub/subscribe.js", "../ipfs-http-client/esm/src/pubsub/unsubscribe.js", "../ipfs-http-client/esm/src/pubsub/subscription-tracker.js", "../ipfs-http-client/esm/src/refs/index.js", "../ipfs-http-client/esm/src/refs/local.js", "../ipfs-http-client/esm/src/repo/index.js", "../ipfs-http-client/esm/src/repo/gc.js", "../ipfs-http-client/esm/src/repo/stat.js", "../ipfs-http-client/esm/src/repo/version.js", "../ipfs-http-client/esm/src/stats/index.js", "../ipfs-http-client/esm/src/stats/bw.js", "../ipfs-http-client/esm/src/swarm/index.js", "../ipfs-http-client/esm/src/swarm/addrs.js", "../ipfs-http-client/esm/src/swarm/connect.js", "../ipfs-http-client/esm/src/swarm/disconnect.js", "../ipfs-http-client/esm/src/swarm/local-addrs.js", "../ipfs-http-client/esm/src/swarm/peers.js", "../ipfs-http-client/esm/src/add.js", "../ipfs-http-client/esm/src/add-all.js", "../ipfs-core-utils/esm/src/files/normalise-input-single.js", "../ipfs-core-utils/esm/src/files/normalise-content.js", "../ipfs-core-utils/esm/src/files/normalise-candidate-single.js", "../ipfs-http-client/esm/src/cat.js", "../ipfs-http-client/esm/src/commands.js", "../ipfs-http-client/esm/src/dns.js", "../ipfs-http-client/esm/src/get-endpoint-config.js", "../ipfs-http-client/esm/src/get.js", "../ipfs-http-client/esm/src/id.js", "../ipfs-http-client/esm/src/is-online.js", "../ipfs-http-client/esm/src/ls.js", "../ipfs-http-client/esm/src/mount.js", "../ipfs-http-client/esm/src/ping.js", "../ipfs-http-client/esm/src/resolve.js", "../ipfs-http-client/esm/src/start.js", "../ipfs-http-client/esm/src/stop.js", "../ipfs-http-client/esm/src/version.js", "browser-external:ipfs-utils/src/files/glob-source.js"],
  "sourcesContent": ["var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const identity = from({\n  name: 'identity',\n  code: 0,\n  encode: input => coerce(input)\n});", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n", "'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n", "import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}", "'use strict'\n\nconst isIp = require('is-ip')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\nconst isIP = isIp\nconst isV4 = isIp.v4\nconst isV6 = isIp.v6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// @ts-ignore - this is copied from the link above better to keep it the same\nconst toBytes = function (ip, buff, offset) {\n  offset = ~~offset\n\n  let result\n\n  if (isV4(ip)) {\n    result = buff || new Uint8Array(offset + 4)\n    // @ts-ignore\n    // eslint-disable-next-line array-callback-return\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff\n    })\n  } else if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      let v4Buffer\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv = [i, '1']\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    result = buff || new Uint8Array(offset + 16)\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      result[offset++] = (word >> 8) & 0xff\n      result[offset++] = word & 0xff\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip)\n  }\n\n  return result\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\n// @ts-ignore - this is copied from the link above better to keep it the same\nconst toString = function (buff, offset, length) {\n  offset = ~~offset\n  length = length || (buff.length - offset)\n\n  const result = []\n  let string\n  const view = new DataView(buff.buffer)\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i])\n    }\n    string = result.join('.')\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n    string = result.join(':')\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n    string = string.replace(/:{3,4}/, '::')\n  }\n\n  return string\n}\n\nmodule.exports = {\n  isIP,\n  isV4,\n  isV6,\n  toBytes,\n  toString\n}\n", "'use strict'\n/** @typedef {import(\"./types\").Protocol} Protocol */\n\n/**\n * Protocols\n *\n * @param {number | string} proto\n * @returns {Protocol}\n */\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string') {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\n/** @type {Array<[number, number, string, (string|boolean)?, string?]>} */\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n/** @type {Record<string,Protocol>} */\nProtocols.names = {}\n/** @type {Record<number,Protocol>} */\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n  return null\n})\n\nProtocols.object = p\n\n/**\n *\n * Create a protocol\n *\n * @param {number} code\n * @param {number} size\n * @param {string} name\n * @param {any} [resolvable]\n * @param {any} [path]\n * @returns {Protocol}\n */\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}", "'use strict'\n\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst { CID } = require('multiformats/cid')\nconst { base32 } = require('multiformats/bases/base32')\nconst { base58btc } = require('multiformats/bases/base58')\nconst Digest = require('multiformats/hashes/digest')\nconst varint = require('varint')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\n/**\n * @param {string} proto\n * @param {string | Uint8Array} a\n */\nfunction Convert (proto, a) {\n  if (a instanceof Uint8Array) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n *\n * @param {number|string} proto\n * @param {Uint8Array} buf\n * @returns {string}\n */\nConvert.toString = function convertToString (proto, buf) {\n  const protocol = protocols(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nConvert.toBytes = function convertToBytes (/** @type {string | number } */ proto, /** @type {string} */ str) {\n  const protocol = protocols(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\n/**\n * @param {string} ipString\n */\nfunction ip2bytes (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\n/**\n * @param {Uint8Array} ipBuff\n */\nfunction bytes2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\n/**\n * @param {number} port\n */\nfunction port2bytes (port) {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2port (buf) {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset)\n}\n\n/**\n * @param {string} str\n */\nfunction str2bytes (str) {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\n/**\n * @param {string} hash - base58btc string\n */\nfunction mh2bytes (hash) {\n  let mh\n\n  if (hash[0] === 'Q' || hash[0] === '1') {\n    mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes\n  } else {\n    mh = CID.parse(hash).multihash.bytes\n  }\n\n  // the address is a varint prefixed multihash string representation\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\n/**\n * Converts bytes to bas58btc string\n *\n * @param {Uint8Array} buf\n * @returns {string} base58btc string\n */\nfunction bytes2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\n/**\n * @param {string} str\n */\nfunction onion2bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\n/**\n * @param {string} str\n */\nfunction onion32bytes (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction bytes2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return addr + ':' + port\n}\n", "'use strict'\n\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bytesToTuples,\n  tuplesToBytes,\n\n  bytesToString,\n  stringToBytes,\n\n  fromString,\n  fromBytes,\n  validateBytes,\n  isValidBytes,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\n/**\n * @param {string} str\n */\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\n/**\n * @param {[number, string?][]} tuples\n */\nfunction stringTuplesToString (tuples) {\n  /** @type {Array<string | undefined>} */\n  const parts = []\n  tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n    return null\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n/**\n * @param {Array<string[] | string >} tuples\n * @returns {[number , Uint8Array?][]}\n */\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map((tup) => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n *\n * @param {Array<[number, Uint8Array?]>} tuples\n * @returns {Array<[number, string?]>}\n */\n\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup[1]) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Uint8Array ]... ] -> Uint8Array\n/**\n * @param {[number, Uint8Array?][]} tuples\n */\nfunction tuplesToBytes (tuples) {\n  return fromBytes(uint8ArrayConcat(tuples.map((/** @type {any[]} */ tup) => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\n/**\n * @param {import(\"./types\").Protocol} p\n * @param {Uint8Array | number[]} addr\n */\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n/**\n *\n * @param {Uint8Array} buf\n * @returns {Array<[number, Uint8Array?]>}\n */\nfunction bytesToTuples (buf) {\n  /** @type {Array<[number, Uint8Array?]>} */\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Uint8Array -> String\n/**\n * @param {Uint8Array} buf\n */\nfunction bytesToString (buf) {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Uint8Array\n/**\n * @param {string} str\n */\nfunction stringToBytes (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n// String -> Uint8Array\n/**\n * @param {string} str\n */\nfunction fromString (str) {\n  return stringToBytes(str)\n}\n\n// Uint8Array -> Uint8Array\n/**\n * @param {Uint8Array} buf\n */\nfunction fromBytes (buf) {\n  const err = validateBytes(buf)\n  if (err) throw err\n  return Uint8Array.from(buf) // copy\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction validateBytes (buf) {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\n/**\n * @param {Uint8Array} buf\n */\nfunction isValidBytes (buf) {\n  return validateBytes(buf) === undefined\n}\n\n/**\n * @param {string} str\n */\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter((/** @type {any} */ a) => a).join('/')\n}\n\n/**\n * @param {string} str\n */\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\n/**\n * @param {any[]} tup\n */\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n", "'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n", "export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}", "'use strict'\n\nconst codec = require('./codec')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst { CID } = require('multiformats/cid')\nconst { base58btc } = require('multiformats/bases/base58')\nconst errCode = require('err-code')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { equals: uint8ArrayEquals } = require('uint8arrays/equals')\n\n/**\n * @typedef {(addr: Multiaddr) => Promise<string[]>} Resolver\n * @typedef {string | Multiaddr | Uint8Array | null} MultiaddrInput\n * @typedef {import('./types').MultiaddrObject} MultiaddrObject\n * @typedef {import('./types').Protocol} Protocol\n */\n\n/** @type {Map<string, Resolver>} */\nconst resolvers = new Map()\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr')\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Uint8Array, String or another Multiaddr instance\n * public key.\n *\n */\nclass Multiaddr {\n  /**\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   *\n   * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n   */\n  constructor (addr) {\n    // default\n    if (addr == null) {\n      addr = ''\n    }\n\n    // Define symbol\n    Object.defineProperty(this, symbol, { value: true })\n\n    if (addr instanceof Uint8Array) {\n      /** @type {Uint8Array} - The raw bytes representing this multiaddress */\n      this.bytes = codec.fromBytes(addr)\n    } else if (typeof addr === 'string') {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n      }\n      this.bytes = codec.fromString(addr)\n    } else if (Multiaddr.isMultiaddr(addr)) { // Multiaddr\n      this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr')\n    }\n  }\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString () {\n    return codec.bytesToString(this.bytes)\n  }\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * JSON.stringify(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n   * // { family: 4, host: '127.0.0.1', transport: 'tcp', port: 4001 }\n   * ```\n   */\n  toOptions () {\n    /** @type {MultiaddrObject} */\n    const opts = {}\n    const parsed = this.toString().split('/')\n    opts.family = parsed[1] === 'ip4' ? 4 : 6\n    opts.host = parsed[2]\n    opts.transport = parsed[3]\n    opts.port = parseInt(parsed[4])\n    return opts\n  }\n\n  /**\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n   * left-to-right order. Each object contains the protocol code, protocol name,\n   * and the size of its address space in bits.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n   * // [ { code: 4, size: 32, name: 'ip4' },\n   * //   { code: 6, size: 16, name: 'tcp' } ]\n   * ```\n   *\n   * @returns {Protocol[]} protocols - All the protocols the address is composed of\n   */\n  protos () {\n    return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n  }\n\n  /**\n   * Returns the codes of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n   * // [ 4, 6 ]\n   * ```\n   *\n   * @returns {number[]} protocol codes\n   */\n  protoCodes () {\n    const codes = []\n    const buf = this.bytes\n    let i = 0\n    while (i < buf.length) {\n      const code = varint.decode(buf, i)\n      const n = varint.decode.bytes\n\n      const p = protocols(code)\n      const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n      i += (size + n)\n      codes.push(code)\n    }\n\n    return codes\n  }\n\n  /**\n   * Returns the names of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n   * // [ 'ip4', 'tcp' ]\n   * ```\n   *\n   * @returns {string[]} protocol names\n   */\n  protoNames () {\n    return this.protos().map(proto => proto.name)\n  }\n\n  /**\n   * Returns a tuple of parts\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n   * ```\n   */\n  tuples () {\n    return codec.bytesToTuples(this.bytes)\n  }\n\n  /**\n   * Returns a tuple of string/number parts\n   * - tuples[][0] = code of protocol\n   * - tuples[][1] = contents of address\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n   * // [ [ 4, '127.0.0.1' ], [ 6, '4001' ] ]\n   * ```\n   */\n  stringTuples () {\n    const t = codec.bytesToTuples(this.bytes)\n    return codec.tuplesToStringTuples(t)\n  }\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate (addr) {\n    addr = new Multiaddr(addr)\n    return new Multiaddr(this.toString() + addr.toString())\n  }\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   * @returns {Multiaddr}\n   */\n  decapsulate (addr) {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n    if (i < 0) {\n      throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n    }\n    return new Multiaddr(s.slice(0, i))\n  }\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * const addr = new Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * new Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   *\n   * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\n   * @returns {Multiaddr}\n   */\n  decapsulateCode (code) {\n    const tuples = this.tuples()\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return new Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n      }\n    }\n    return this\n  }\n\n  /**\n   * Extract the peerId if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n   *\n   * // should return QmValidBase58string or null if the id is missing or invalid\n   * const peerId = mh1.getPeerId()\n   * ```\n   *\n   * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\n   */\n  getPeerId () {\n    try {\n      const tuples = this.stringTuples().filter((tuple) => {\n        if (tuple[0] === protocols.names.ipfs.code) {\n          return true\n        }\n        return false\n      })\n\n      // Get the last ipfs tuple ['ipfs', 'peerid string']\n      const tuple = tuples.pop()\n      if (tuple && tuple[1]) {\n        const peerIdStr = tuple[1]\n\n        // peer id is base58btc encoded string but not multibase encoded so add the `z`\n        // prefix so we can validate that it is correctly encoded\n        if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n          return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc')\n        }\n\n        // try to parse peer id as CID\n        return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc')\n      }\n\n      return null\n    } catch (e) {\n      return null\n    }\n  }\n\n  /**\n   * Extract the path if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n   *\n   * // should return utf8 string or null if the id is missing or invalid\n   * const path = mh1.getPath()\n   * ```js\n   *\n   * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\n   */\n  getPath () {\n    let path = null\n    try {\n      path = this.stringTuples().filter((tuple) => {\n        const proto = protocols(tuple[0])\n        if (proto.path) {\n          return true\n        }\n        return false\n      })[0][1]\n\n      if (!path) {\n        path = null\n      }\n    } catch (e) {\n      path = null\n    }\n    return path\n  }\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   *\n   * @param {Multiaddr} addr\n   * @returns {boolean}\n   */\n  equals (addr) {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  /**\n   * Resolve multiaddr if containing resolvable hostname.\n   *\n   * @example\n   * ```js\n   * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\n   * const mh1 = new Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n   * const resolvedMultiaddrs = await mh1.resolve()\n   * // [\n   * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\n   * // ]\n   * ```\n   *\n   * @returns {Promise<Array<Multiaddr>>}\n   */\n  async resolve () {\n    const resolvableProto = this.protos().find((p) => p.resolvable)\n\n    // Multiaddr is not resolvable?\n    if (!resolvableProto) {\n      return [this]\n    }\n\n    const resolver = resolvers.get(resolvableProto.name)\n    if (!resolver) {\n      throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n    }\n\n    const addresses = await resolver(this)\n    return addresses.map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\n   * is left out: in Node (and most network systems) the protocol is unknowable\n   * given only the address.\n   *\n   * Has to be a ThinWaist Address, otherwise throws error\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n   * // {family: 4, address: '127.0.0.1', port: 4001}\n   * ```\n   *\n   * @returns {{family: 4 | 6, address: string, port: number}}\n   * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n   */\n  nodeAddress () {\n    const codes = this.protoCodes()\n    const names = this.protoNames()\n    const parts = this.toString().split('/').slice(1)\n\n    if (parts.length < 4) {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n    } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n      throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n    } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n      throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n    }\n\n    return {\n      family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n      address: parts[1],\n      port: parseInt(parts[3]) // tcp or udp port\n    }\n  }\n\n  /**\n   * Returns if a Multiaddr is a Thin Waist address or not.\n   *\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\n   *\n   * `{IPv4, IPv6}/{TCP, UDP}`\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * const mh2 = new Multiaddr('/ip4/192.168.2.1/tcp/5001')\n   * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n   * const mh4 = new Multiaddr('/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n   * // <Multiaddr 047f0000010607d0de039302a503221220d52ebb89d85b02a284948203a62ff28389c57c9f42beec4ec20db76a64835843 - /ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a>\n   * mh1.isThinWaistAddress()\n   * // true\n   * mh2.isThinWaistAddress()\n   * // true\n   * mh3.isThinWaistAddress()\n   * // false\n   * mh4.isThinWaistAddress()\n   * // false\n   * ```\n   *\n   * @param {Multiaddr} [addr] - Defaults to using `this` instance\n   */\n  isThinWaistAddress (addr) {\n    const protos = (addr || this).protos()\n\n    if (protos.length !== 2) {\n      return false\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false\n    }\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Creates a Multiaddr from a node-friendly address object\n   *\n   * @example\n   * ```js\n   * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   *\n   * @param {{family: 4 | 6, address: string, port: number}} addr\n   * @param {string} transport\n   */\n  static fromNodeAddress (addr, transport) {\n    if (!addr) { throw new Error('requires node address object') }\n    if (!transport) { throw new Error('requires transport protocol') }\n    let ip\n    switch (addr.family) {\n      case 4:\n        ip = 'ip4'\n        break\n      case 6:\n        ip = 'ip6'\n        break\n      default:\n        throw Error(`Invalid addr family. Got '${addr.family}' instead of 4 or 6`)\n    }\n    return new Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n  }\n\n  /**\n   * Returns if something is a Multiaddr that is a name\n   *\n   * @param {Multiaddr} addr\n   * @returns {boolean} isName\n   */\n  static isName (addr) {\n    if (!Multiaddr.isMultiaddr(addr)) {\n      return false\n    }\n\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable)\n  }\n\n  /**\n   * Check if object is a CID instance\n   *\n   * @param {any} value\n   * @returns {value is Multiaddr}\n   */\n  static isMultiaddr (value) {\n    return value instanceof Multiaddr || Boolean(value && value[symbol])\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * For post Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * console.log(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   *\n   * @returns {string}\n   */\n  [inspect] () {\n    return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * Fallback for pre Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   *\n   * @returns {string}\n   */\n  inspect () {\n    return '<Multiaddr ' +\n      uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n      codec.bytesToString(this.bytes) + '>'\n  }\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @returns {{table: Array, names: Object, codes: Object}}\n */\nMultiaddr.protocols = protocols\n\nMultiaddr.resolvers = resolvers\n\n/**\n * Static factory\n *\n * @param {MultiaddrInput} addr\n */\nfunction multiaddr (addr) {\n  return new Multiaddr(addr)\n}\n\nmodule.exports = { Multiaddr, multiaddr, protocols, resolvers }\n", "// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to true\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n", "'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict'\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n", "module.exports = window['electron-fetch'];", "var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n", ";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n", "var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n", "/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n", "'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n", "var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"zlib\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81\u00E9\u00E2\\x84\u00E0\\x86\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\\x8d\\x8e\\x8f\\x90\\u0651\\u0652\u00F4\u00A4\u0640\u00FB\u00F9\u0621\u0622\u0623\u0624\u00A3\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0636\u0637\u0638\u0639\u063A\u0641\u00B5\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u2261\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "'use strict';\n\nvar iconvLite = require('iconv-lite');\n\n// Expose to the world\nmodule.exports.convert = convert;\n\n/**\n * Convert encoding of an UTF-8 string or a buffer\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convert(str, to, from) {\n    from = checkEncoding(from || 'UTF-8');\n    to = checkEncoding(to || 'UTF-8');\n    str = str || '';\n\n    var result;\n\n    if (from !== 'UTF-8' && typeof str === 'string') {\n        str = Buffer.from(str, 'binary');\n    }\n\n    if (from === to) {\n        if (typeof str === 'string') {\n            result = Buffer.from(str);\n        } else {\n            result = str;\n        }\n    } else {\n        try {\n            result = convertIconvLite(str, to, from);\n        } catch (E) {\n            console.error(E);\n            result = str;\n        }\n    }\n\n    if (typeof result === 'string') {\n        result = Buffer.from(result, 'utf-8');\n    }\n\n    return result;\n}\n\n/**\n * Convert encoding of astring with iconv-lite\n *\n * @param {String|Buffer} str String to be converted\n * @param {String} to Encoding to be converted to\n * @param {String} [from='UTF-8'] Encoding to be converted from\n * @return {Buffer} Encoded string\n */\nfunction convertIconvLite(str, to, from) {\n    if (to === 'UTF-8') {\n        return iconvLite.decode(str, from);\n    } else if (from === 'UTF-8') {\n        return iconvLite.encode(str, to);\n    } else {\n        return iconvLite.encode(iconvLite.decode(str, from), to);\n    }\n}\n\n/**\n * Converts charset name if needed\n *\n * @param {String} name Character set\n * @return {String} Character set name\n */\nfunction checkEncoding(name) {\n    return (name || '')\n        .toString()\n        .trim()\n        .replace(/^latin[\\-_]?(\\d+)$/i, 'ISO-8859-$1')\n        .replace(/^win(?:dows)?[\\-_]?(\\d+)$/i, 'WINDOWS-$1')\n        .replace(/^utf[\\-_]?(\\d+)$/i, 'UTF-$1')\n        .replace(/^ks_c_5601\\-1987$/i, 'CP949')\n        .replace(/^us[\\-_]?ascii$/i, 'ASCII')\n        .toUpperCase();\n}\n", "import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdestroyStream(response.body, err);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n", "'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n", "'use strict'\n\nconst { isElectronMain } = require('./env')\n\nif (isElectronMain) {\n  module.exports = require('electron-fetch')\n} else {\n// use window.fetch if it is available, fall back to node-fetch if not\n  module.exports = require('native-fetch')\n}\n", "'use strict'\n\nconst { TimeoutError, AbortError } = require('./error')\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\n\n/**\n * @typedef {import('../types').FetchOptions} FetchOptions\n * @typedef {import('../types').ProgressFn} ProgressFn\n */\n\n/**\n * Fetch with progress\n *\n * @param {string | Request} url\n * @param {FetchOptions} [options]\n * @returns {Promise<ResponseWithURL>}\n */\nconst fetchWithProgress = (url, options = {}) => {\n  const request = new XMLHttpRequest()\n  request.open(options.method || 'GET', url.toString(), true)\n\n  const { timeout, headers } = options\n\n  if (timeout && timeout > 0 && timeout < Infinity) {\n    request.timeout = timeout\n  }\n\n  if (options.overrideMimeType != null) {\n    request.overrideMimeType(options.overrideMimeType)\n  }\n\n  if (headers) {\n    for (const [name, value] of new Headers(headers)) {\n      request.setRequestHeader(name, value)\n    }\n  }\n\n  if (options.signal) {\n    options.signal.onabort = () => request.abort()\n  }\n\n  if (options.onUploadProgress) {\n    request.upload.onprogress = options.onUploadProgress\n  }\n\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\n  // instances coming from JSDOM are not compatible with `Response` from\n  // node-fetch (which is the setup we get when testing with jest because\n  // it uses JSDOM which does not provide a global fetch\n  // https://github.com/jsdom/jsdom/issues/1724)\n  request.responseType = 'arraybuffer'\n\n  return new Promise((resolve, reject) => {\n    /**\n     * @param {Event} event\n     */\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'error': {\n          resolve(Response.error())\n          break\n        }\n        case 'load': {\n          resolve(\n            new ResponseWithURL(request.responseURL, request.response, {\n              status: request.status,\n              statusText: request.statusText,\n              headers: parseHeaders(request.getAllResponseHeaders())\n            })\n          )\n          break\n        }\n        case 'timeout': {\n          reject(new TimeoutError())\n          break\n        }\n        case 'abort': {\n          reject(new AbortError())\n          break\n        }\n        default: {\n          break\n        }\n      }\n    }\n    request.onerror = handleEvent\n    request.onload = handleEvent\n    request.ontimeout = handleEvent\n    request.onabort = handleEvent\n\n    // @ts-expect-error options.body can be a node readable stream, which isn't compatible with XHR, but this\n    // file is a browser override so you won't get a node readable stream so ignore the error\n    request.send(options.body)\n  })\n}\n\nconst fetchWithStreaming = fetch\n\n/**\n * @param {string | Request} url\n * @param {FetchOptions} options\n */\nconst fetchWith = (url, options = {}) =>\n  (options.onUploadProgress != null)\n    ? fetchWithProgress(url, options)\n    : fetchWithStreaming(url, options)\n\n/**\n * Parse Headers from a XMLHttpRequest\n *\n * @param {string} input\n * @returns {Headers}\n */\nconst parseHeaders = (input) => {\n  const headers = new Headers()\n  for (const line of input.trim().split(/[\\r\\n]+/)) {\n    const index = line.indexOf(': ')\n    if (index > 0) {\n      headers.set(line.slice(0, index), line.slice(index + 1))\n    }\n  }\n\n  return headers\n}\n\nclass ResponseWithURL extends Response {\n  /**\n   * @param {string} url\n   * @param {BodyInit} body\n   * @param {ResponseInit} options\n   */\n  constructor (url, body, options) {\n    super(body, options)\n    Object.defineProperty(this, 'url', { value: url })\n  }\n}\n\nmodule.exports = {\n  fetch: fetchWith,\n  Request,\n  Headers\n}\n", "'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n", "'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n", "'use strict'\n\nconst isReactNative =\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n\nfunction getDefaultBase () {\n  if (isReactNative) {\n    return 'http://localhost'\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return ''\n  }\n\n  return self.location.protocol + '//' + self.location.host\n}\n\nconst URL = self.URL\nconst defaultBase = getDefaultBase()\n\nclass URLWithLegacySupport {\n  constructor (url = '', base = defaultBase) {\n    this.super = new URL(url, base)\n    this.path = this.pathname + this.search\n    this.auth =\n            this.username && this.password\n              ? this.username + ':' + this.password\n              : null\n\n    this.query =\n            this.search && this.search.startsWith('?')\n              ? this.search.slice(1)\n              : null\n  }\n\n  get hash () {\n    return this.super.hash\n  }\n\n  get host () {\n    return this.super.host\n  }\n\n  get hostname () {\n    return this.super.hostname\n  }\n\n  get href () {\n    return this.super.href\n  }\n\n  get origin () {\n    return this.super.origin\n  }\n\n  get password () {\n    return this.super.password\n  }\n\n  get pathname () {\n    return this.super.pathname\n  }\n\n  get port () {\n    return this.super.port\n  }\n\n  get protocol () {\n    return this.super.protocol\n  }\n\n  get search () {\n    return this.super.search\n  }\n\n  get searchParams () {\n    return this.super.searchParams\n  }\n\n  get username () {\n    return this.super.username\n  }\n\n  set hash (hash) {\n    this.super.hash = hash\n  }\n\n  set host (host) {\n    this.super.host = host\n  }\n\n  set hostname (hostname) {\n    this.super.hostname = hostname\n  }\n\n  set href (href) {\n    this.super.href = href\n  }\n\n  set password (password) {\n    this.super.password = password\n  }\n\n  set pathname (pathname) {\n    this.super.pathname = pathname\n  }\n\n  set port (port) {\n    this.super.port = port\n  }\n\n  set protocol (protocol) {\n    this.super.protocol = protocol\n  }\n\n  set search (search) {\n    this.super.search = search\n  }\n\n  set username (username) {\n    this.super.username = username\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL (o) {\n    return URL.createObjectURL(o)\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL (o) {\n    URL.revokeObjectURL(o)\n  }\n\n  toJSON () {\n    return this.super.toJSON()\n  }\n\n  toString () {\n    return this.super.toString()\n  }\n\n  format () {\n    return this.toString()\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format (obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj)\n\n    return url.toString()\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass =\n            // @ts-ignore its not supported in node but we normalise\n            obj.username && obj.password\n              // @ts-ignore its not supported in node but we normalise\n              ? `${obj.username}:${obj.password}@`\n              : ''\n    const auth = obj.auth ? obj.auth + '@' : ''\n    const port = obj.port ? ':' + obj.port : ''\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\n    const host = obj.host || ''\n    const hostname = obj.hostname || ''\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\n    const hash = obj.hash || ''\n    const pathname = obj.pathname || ''\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search\n\n    return `${protocol}${userPass || auth}${\n            host || hostname + port\n        }${path}${hash}`\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n}\n", "'use strict'\n\nconst { URLWithLegacySupport, format } = require('./url')\n\n/**\n * @param {string | undefined} url\n * @param {any} [location]\n * @param {any} [protocolMap]\n * @param {any} [defaultProtocol]\n */\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n  let protocol = location.protocol\n    ? location.protocol.replace(':', '')\n    : 'http'\n\n  // Check protocol map\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':'\n  let urlParsed\n\n  try {\n    urlParsed = new URLWithLegacySupport(url)\n  } catch (err) {\n    urlParsed = {}\n  }\n\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  })\n\n  return new URLWithLegacySupport(url, format(base)).toString()\n}\n", "'use strict'\n\nconst {\n  URLWithLegacySupport,\n  format,\n  URLSearchParams,\n  defaultBase\n} = require('./src/url')\nconst relative = require('./src/relative')\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams,\n  format,\n  relative,\n  defaultBase\n}\n", "/*globals self, window */\n\"use strict\"\n\n/*eslint-disable @mysticatea/prettier */\nconst { AbortController, AbortSignal } =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nmodule.exports = AbortController\nmodule.exports.AbortSignal = AbortSignal\nmodule.exports.default = AbortController\n", "'use strict'\n\nlet impl\n\nif (globalThis.AbortController && globalThis.AbortSignal) {\n  impl = globalThis\n} else {\n  impl = require('abort-controller')\n}\n\nmodule.exports.AbortSignal = impl.AbortSignal\nmodule.exports.AbortController = impl.AbortController\n", "const { AbortController } = require('native-abort-controller')\n\n/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n", "/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst { AbortController } = require('native-abort-controller')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      return fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n", "const { Multiaddr } = require('multiaddr')\n\nconst reduceValue = (_, v) => v\nconst tcpUri = (str, port, parts, opts) => {\n  // return tcp when explicitly requested\n  if (opts && opts.assumeHttp === false) return `tcp://${str}:${port}`\n  // check if tcp is the last protocol in multiaddr\n  let protocol = 'tcp'\n  let explicitPort = `:${port}`\n  const last = parts[parts.length - 1]\n  if (last.protocol === 'tcp') {\n    // assume http and produce clean urls\n    protocol = port === '443' ? 'https' : 'http'\n    explicitPort = port === '443' || port === '80' ? '' : explicitPort\n  }\n  return `${protocol}://${str}${explicitPort}`\n}\n\nconst Reducers = {\n  ip4: reduceValue,\n  ip6: (str, content, i, parts) => (\n    parts.length === 1 && parts[0].protocol === 'ip6'\n      ? content\n      : `[${content}]`\n  ),\n  tcp: (str, content, i, parts, opts) => (\n    parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n      ? `${str}:${content}`\n      : tcpUri(str, content, parts, opts)\n  ),\n  udp: (str, content) => `udp://${str}:${content}`,\n  dnsaddr: reduceValue,\n  dns4: reduceValue,\n  dns6: reduceValue,\n  ipfs: (str, content) => `${str}/ipfs/${content}`,\n  p2p: (str, content) => `${str}/p2p/${content}`,\n  http: str => `http://${str}`,\n  https: str => `https://${str}`,\n  ws: str => `ws://${str}`,\n  wss: str => `wss://${str}`,\n  'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n  'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n  'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n}\n\nmodule.exports = (multiaddr, opts) => {\n  const ma = new Multiaddr(multiaddr)\n  const parts = multiaddr.toString().split('/').slice(1)\n  return ma\n    .tuples()\n    .map(tuple => ({\n      protocol: parts.shift(),\n      content: tuple[1] ? parts.shift() : null\n    }))\n    .reduce((str, part, i, parts) => {\n      const reduce = Reducers[part.protocol]\n      if (!reduce) throw new Error(`Unsupported protocol ${part.protocol}`)\n      return reduce(str, part.content, i, parts, opts)\n    }, '')\n}\n", "'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n", "'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n", "'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n", "'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n", "'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n", "module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n", "/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n", "'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n", "\nexport * from \"./node_modules/ipfs-http-client/esm/src/index.js\"", "import { Multibases } from 'ipfs-core-utils/multibases';\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs';\nimport { Multihashes } from 'ipfs-core-utils/multihashes';\nimport * as dagPB from '@ipld/dag-pb';\nimport * as dagCBOR from '@ipld/dag-cbor';\nimport * as dagJSON from '@ipld/dag-json';\nimport { identity } from 'multiformats/hashes/identity';\nimport {\n  bases,\n  hashes,\n  codecs\n} from 'multiformats/basics';\nimport { createBitswap } from './bitswap/index.js';\nimport { createBlock } from './block/index.js';\nimport { createBootstrap } from './bootstrap/index.js';\nimport { createConfig } from './config/index.js';\nimport { createDag } from './dag/index.js';\nimport { createDht } from './dht/index.js';\nimport { createDiag } from './diag/index.js';\nimport { createFiles } from './files/index.js';\nimport { createKey } from './key/index.js';\nimport { createLog } from './log/index.js';\nimport { createName } from './name/index.js';\nimport { createObject } from './object/index.js';\nimport { createPin } from './pin/index.js';\nimport { createPubsub } from './pubsub/index.js';\nimport { createRefs } from './refs/index.js';\nimport { createRepo } from './repo/index.js';\nimport { createStats } from './stats/index.js';\nimport { createSwarm } from './swarm/index.js';\nimport { createAdd } from './add.js';\nimport { createAddAll } from './add-all.js';\nimport { createCat } from './cat.js';\nimport { createCommands } from './commands.js';\nimport { createDns } from './dns.js';\nimport { createGetEndpointConfig } from './get-endpoint-config.js';\nimport { createGet } from './get.js';\nimport { createId } from './id.js';\nimport { createIsOnline } from './is-online.js';\nimport { createLs } from './ls.js';\nimport { createMount } from './mount.js';\nimport { createPing } from './ping.js';\nimport { createResolve } from './resolve.js';\nimport { createStart } from './start.js';\nimport { createStop } from './stop.js';\nimport { createVersion } from './version.js';\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js';\nexport function create(options = {}) {\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: id => id,\n    decode: id => id\n  };\n  const multibaseCodecs = Object.values(bases);\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base));\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  });\n  const blockCodecs = Object.values(codecs);\n  [\n    dagPB,\n    dagCBOR,\n    dagJSON,\n    id\n  ].concat(options.ipld && options.ipld.codecs || []).forEach(codec => blockCodecs.push(codec));\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  });\n  const multihashHashers = Object.values(hashes);\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher));\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  });\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  };\n  return client;\n}\nexport {\n  CID\n} from 'multiformats/cid';\nexport {\n  Multiaddr as multiaddr\n} from 'multiaddr';\nexport {\n  default as urlSource\n} from 'ipfs-utils/src/files/url-source.js';\nexport const globSource = globSourceImport;", "const LOAD_BASE = name => Promise.reject(new Error(`No base found for \"${ name }\"`));\nexport class Multibases {\n  constructor(options) {\n    this._basesByName = {};\n    this._basesByPrefix = {};\n    this._loadBase = options.loadBase || LOAD_BASE;\n    for (const base of options.bases) {\n      this.addBase(base);\n    }\n  }\n  addBase(base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${ base.name }\"`);\n    }\n    this._basesByName[base.name] = base;\n    this._basesByPrefix[base.prefix] = base;\n  }\n  removeBase(base) {\n    delete this._basesByName[base.name];\n    delete this._basesByPrefix[base.prefix];\n  }\n  async getBase(nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix];\n    }\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix];\n    }\n    const base = await this._loadBase(nameOrPrefix);\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base);\n    }\n    return base;\n  }\n  listBases() {\n    return Object.values(this._basesByName);\n  }\n}", "const LOAD_CODEC = codeOrName => Promise.reject(new Error(`No codec found for \"${ codeOrName }\"`));\nexport class Multicodecs {\n  constructor(options) {\n    this._codecsByName = {};\n    this._codecsByCode = {};\n    this._loadCodec = options.loadCodec || LOAD_CODEC;\n    for (const codec of options.codecs) {\n      this.addCodec(codec);\n    }\n  }\n  addCodec(codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${ codec.name }\"`);\n    }\n    this._codecsByName[codec.name] = codec;\n    this._codecsByCode[codec.code] = codec;\n  }\n  removeCodec(codec) {\n    delete this._codecsByName[codec.name];\n    delete this._codecsByCode[codec.code];\n  }\n  async getCodec(code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode;\n    if (table[code]) {\n      return table[code];\n    }\n    const codec = await this._loadCodec(code);\n    if (table[code] == null) {\n      this.addCodec(codec);\n    }\n    return codec;\n  }\n  listCodecs() {\n    return Object.values(this._codecsByName);\n  }\n}", "const LOAD_HASHER = codeOrName => Promise.reject(new Error(`No hasher found for \"${ codeOrName }\"`));\nexport class Multihashes {\n  constructor(options) {\n    this._hashersByName = {};\n    this._hashersByCode = {};\n    this._loadHasher = options.loadHasher || LOAD_HASHER;\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher);\n    }\n  }\n  addHasher(hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${ hasher.name }\"`);\n    }\n    this._hashersByName[hasher.name] = hasher;\n    this._hashersByCode[hasher.code] = hasher;\n  }\n  removeHasher(hasher) {\n    delete this._hashersByName[hasher.name];\n    delete this._hashersByCode[hasher.code];\n  }\n  async getHasher(code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode;\n    if (table[code]) {\n      return table[code];\n    }\n    const hasher = await this._loadHasher(code);\n    if (table[code] == null) {\n      this.addHasher(hasher);\n    }\n    return hasher;\n  }\n  listHashers() {\n    return Object.values(this._hashersByName);\n  }\n}", "import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};", "const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}", "const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];", "import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}", "import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);", "import { encode } from './lib/encode.js';\nimport { decode } from './lib/decode.js';\nimport {\n  Token,\n  Type\n} from './lib/token.js';\nexport {\n  decode,\n  encode,\n  Token,\n  Type\n};", "import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[Type.uint.major] = encodeUint;\ncborEncoders[Type.negint.major] = encodeNegint;\ncborEncoders[Type.bytes.major] = encodeBytes;\ncborEncoders[Type.string.major] = encodeString;\ncborEncoders[Type.array.major] = encodeArray;\ncborEncoders[Type.map.major] = encodeMap;\ncborEncoders[Type.tag.major] = encodeTag;\ncborEncoders[Type.float.major] = encodeFloat;\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};", "const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}", "class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};", "import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}", "export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}", "const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { toString } from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  return new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n}\nexport function decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport const encodeString = encodeBytes;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  let decoded;\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;", "import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { encode } from './encode.js';\nimport {\n  decode,\n  Tokenizer\n} from './decode.js';\nexport {\n  encode,\n  decode,\n  Tokenizer\n};", "import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};", "import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};", "import { createWantlist } from './wantlist.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createStat } from './stat.js';\nimport { createUnwant } from './unwant.js';\nexport function createBitswap(config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  };\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createWantlist = configure(api => {\n  async function wantlist(options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return (res.Keys || []).map(k => CID.parse(k['/']));\n  }\n  return wantlist;\n});", "import { Client } from './core.js';\nexport const configure = fn => {\n  return options => {\n    return fn(new Client(options), options);\n  };\n};", "import { Multiaddr } from 'multiaddr';\nimport {\n  isBrowser,\n  isWebWorker,\n  isNode\n} from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport debug from 'debug';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nconst log = debug('ipfs-http-client:lib:error-handler');\nconst merge = mergeOpts.bind({ ignoreUndefined: true });\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\nconst normalizeOptions = (options = {}) => {\n  let url;\n  let opts = {};\n  let agent;\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    const host = (opts.host || DEFAULT_HOST).split(':')[0];\n    const port = opts.port || DEFAULT_PORT;\n    url = new URL(`${ protocol }://${ host }:${ port }`);\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    const Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      maxSockets: 6\n    });\n  }\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  };\n};\nexport const errorHandler = async response => {\n  let msg;\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json();\n      log(data);\n      msg = data.Message || data.message;\n    } else {\n      msg = await response.text();\n    }\n  } catch (err) {\n    log('Failed to parse error response', err);\n    msg = err.message;\n  }\n  let error = new HTTP.HTTPError(response);\n  if (msg) {\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError();\n    }\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError();\n    }\n  }\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError();\n  }\n  if (msg) {\n    error.message = msg;\n  }\n  throw error;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\nconst parseTimeout = value => {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport class Client extends HTTP {\n  constructor(options = {}) {\n    const opts = normalizeOptions(options);\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${ opts.url }`,\n      handleError: errorHandler,\n      transformSearchParams: search => {\n        const out = new URLSearchParams();\n        for (const [key, value] of search) {\n          if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n            out.append(kebabCase(key), value);\n          }\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value);\n          }\n        }\n        return out;\n      },\n      agent: opts.agent\n    });\n    delete this.get;\n    delete this.put;\n    delete this.delete;\n    delete this.options;\n    const fetch = this.fetch;\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${ opts.url }/${ resource }`;\n      }\n      return fetch.call(this, resource, merge(options, { method: 'POST' }));\n    };\n  }\n}\nexport const HTTPError = HTTP.HTTPError;", "let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['\u00B5s'] =\r\nparse['\u03BCs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n", "import { Multiaddr } from 'multiaddr';\nimport multiAddrToUri from 'multiaddr-to-uri';\nexport function toUrlString(url) {\n  try {\n    url = multiAddrToUri(new Multiaddr(url));\n  } catch (err) {\n  }\n  url = url.toString();\n  return url;\n}", "export default () => {\n};", "import { modeToString } from './mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nexport function toUrlSearchParams({arg, searchParams, hashAlg, mtime, mode, ...options} = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    options.timeout = `${ options.timeout }ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(arg => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}", "export function modeToString(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'string') {\n    return mode;\n  }\n  return mode.toString(8).padStart(4, '0');\n}", "import errCode from 'err-code';\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createWantlistForPeer = configure(api => {\n  async function wantlistForPeer(peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json();\n    return (res.Keys || []).map(k => CID.parse(k['/']));\n  }\n  return wantlistForPeer;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => CID.parse(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createUnwant = configure(api => {\n  async function unwant(cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return unwant;\n});", "import { createGet } from './get.js';\nimport { createPut } from './put.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\nexport function createBlock(config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    return new Uint8Array(await res.arrayBuffer());\n  }\n  return get;\n});", "import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createPut = configure(api => {\n  async function put(data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    let res;\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...await multipartRequest([data], controller, options.headers)\n      });\n      res = await response.json();\n    } catch (err) {\n      if (options.format === 'dag-pb') {\n        return put(data, {\n          ...options,\n          format: 'protobuf'\n        });\n      } else if (options.format === 'dag-cbor') {\n        return put(data, {\n          ...options,\n          format: 'cbor'\n        });\n      }\n      throw err;\n    }\n    return CID.parse(res.Key);\n  }\n  return put;\n});", "import { normaliseInput } from './files/normalise-input-multiple.browser.js';\nimport { modeToString } from './mode-to-string.js';\nexport async function multipartRequest(source, abortController, headers = {}) {\n  const parts = [];\n  const formData = new FormData();\n  let index = 0;\n  let total = 0;\n  for await (const {content, path, mode, mtime} of normaliseInput(source)) {\n    let fileSuffix = '';\n    const type = content ? 'file' : 'dir';\n    if (index > 0) {\n      fileSuffix = `-${ index }`;\n    }\n    let fieldName = type + fileSuffix;\n    const qs = [];\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${ modeToString(mode) }`);\n    }\n    if (mtime != null) {\n      const {secs, nsecs} = mtime;\n      qs.push(`mtime=${ secs }`);\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${ nsecs }`);\n      }\n    }\n    if (qs.length) {\n      fieldName = `${ fieldName }?${ qs.join('&') }`;\n    }\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined);\n      const end = total + content.size;\n      parts.push({\n        name: path,\n        start: total,\n        end\n      });\n      total = end;\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }));\n    } else {\n      throw new Error('path or content or both must be set');\n    }\n    index++;\n  }\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  };\n}", "import { normaliseContent } from './normalise-content.browser.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent, true);\n}", "import errCode from 'err-code';\nimport itPeekable from 'it-peekable';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport all from 'it-all';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js';\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return new Blob([input]);\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()]);\n  }\n  if (isBlob(input)) {\n    return input;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return itToBlob(peekable);\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))]);\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nasync function itToBlob(stream) {\n  const parts = [];\n  for await (const chunk of stream) {\n    parts.push(chunk);\n  }\n  return new Blob(parts);\n}", "export function isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nexport function isBlob(obj) {\n  return obj.constructor && (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') && typeof obj.stream === 'function';\n}\nexport function isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\nexport const isReadableStream = value => value && typeof value.getReader === 'function';", "import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}", "import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};", "import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};", "export function modeToString(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'string') {\n    return mode;\n  }\n  return mode.toString(8).padStart(4, '0');\n}", "import { anySignal } from 'any-signal';\nfunction filter(signals) {\n  return signals.filter(Boolean);\n}\nexport function abortSignal(...signals) {\n  return anySignal(filter(signals));\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRm = configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Key),\n      size: data.Size\n    };\n  }\n  return stat;\n});", "import { createAdd } from './add.js';\nimport { createClear } from './clear.js';\nimport { createList } from './list.js';\nimport { createReset } from './reset.js';\nimport { createRm } from './rm.js';\nexport function createBootstrap(config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createAdd = configure(api => {\n  async function add(addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return add;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createClear = configure(api => {\n  async function clear(options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return clear;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return list;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createReset = configure(api => {\n  async function reset(options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return reset;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { Multiaddr } from 'multiaddr';\nexport const createRm = configure(api => {\n  async function rm(addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) };\n  }\n  return rm;\n});", "import { createProfiles } from './profiles/index.js';\nimport { createGet } from './get.js';\nimport { createGetAll } from './get-all.js';\nimport { createReplace } from './replace.js';\nimport { createSet } from './set.js';\nexport function createConfig(config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  };\n}", "import { createApply } from './apply.js';\nimport { createList } from './list.js';\nexport function createProfiles(config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  };\n}", "import { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createApply = configure(api => {\n  async function apply(profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      original: data.OldCfg,\n      updated: data.NewCfg\n    };\n  }\n  return apply;\n});", "import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.map(profile => objectToCamel(profile));\n  }\n  return list;\n});", "export function objectToCamel(obj) {\n  if (obj == null) {\n    return obj;\n  }\n  const caps = /^[A-Z]+$/;\n  const output = {};\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) {\n      camelObj[k.toLowerCase()] = obj[k];\n    } else if (caps.test(k[0])) {\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k];\n    } else {\n      camelObj[k] = obj[k];\n    }\n    return camelObj;\n  }, output);\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n  return get;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGetAll = configure(api => {\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({ ...options }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data;\n  };\n  return getAll;\n});", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createReplace = configure(api => {\n  const replace = async (config, options = {}) => {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n    });\n    await res.text();\n  };\n  return replace;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSet = configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n  case 'boolean':\n    return {\n      arg: [\n        key,\n        value.toString()\n      ],\n      bool: true\n    };\n  case 'string':\n    return {\n      arg: [\n        key,\n        value\n      ]\n    };\n  default:\n    return {\n      arg: [\n        key,\n        JSON.stringify(value)\n      ],\n      json: true\n    };\n  }\n};", "import { createExport } from './export.js';\nimport { createGet } from './get.js';\nimport { createImport } from './import.js';\nimport { createPut } from './put.js';\nimport { createResolve } from './resolve.js';\nexport function createDag(codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createExport = configure(api => {\n  async function* dagExport(root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({ arg: root.toString() }),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return dagExport;\n});", "import { configure } from '../lib/configure.js';\nimport { resolve } from '../lib/resolve.js';\nimport first from 'it-first';\nimport last from 'it-last';\nimport errCode from 'err-code';\nimport { createGet as createBlockGet } from '../block/get.js';\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts);\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve ? await first(resolve(cid, options.path, codecs, getBlock, options)) : await last(resolve(cid, options.path, codecs, getBlock, options));\n        const result = entry;\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n        }\n        return result;\n      }\n      const codec = await codecs.getCodec(cid.code);\n      const block = await getBlock(cid, options);\n      const node = codec.decode(block);\n      return {\n        value: node,\n        remainderPath: ''\n      };\n    };\n    return get;\n  });\n  return fn(options);\n};", "import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nexport async function* resolve(cid, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid);\n  let lastCid = cid;\n  while (parts.length) {\n    const key = parts.shift();\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${ path }\"`), 'ERR_INVALID_PATH');\n    }\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode(new Error(`no link named \"${ key }\" under ${ lastCid }`), 'ERR_NO_LINK');\n    }\n    const cid = CID.asCID(value);\n    if (cid) {\n      lastCid = cid;\n      value = await load(value);\n    }\n  }\n  yield {\n    value,\n    remainderPath: ''\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { AbortController } from 'native-abort-controller';\nimport { CID } from 'multiformats/cid';\nexport const createImport = configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      };\n      let serialized;\n      if (settings.inputCodec) {\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded');\n        }\n        serialized = dagNode;\n      } else {\n        const storeCodec = await codecs.getCodec(settings.storeCodec);\n        serialized = storeCodec.encode(dagNode);\n        settings.inputCodec = settings.storeCodec;\n      }\n      const controller = new AbortController();\n      const signal = abortSignal(controller.signal, settings.signal);\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...await multipartRequest([serialized], controller, settings.headers)\n      });\n      const data = await res.json();\n      return CID.parse(data.Cid['/']);\n    };\n    return put;\n  });\n  return fn(options);\n};", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ ipfsPath }${ options.path ? `/${ options.path }`.replace(/\\/[/]+/g, '/') : '' }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n  return resolve;\n});", "import { createFindPeer } from './find-peer.js';\nimport { createFindProvs } from './find-provs.js';\nimport { createGet } from './get.js';\nimport { createProvide } from './provide.js';\nimport { createPut } from './put.js';\nimport { createQuery } from './query.js';\nexport function createDht(config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createFindPeer = configure(api => {\n  async function* findPeer(peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return findPeer;\n});", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js';\nimport { Multiaddr } from 'multiaddr';\nexport const mapEvent = event => {\n  if (event.Type === SendingQuery) {\n    return {\n      to: event.ID,\n      name: 'SENDING_QUERY',\n      type: event.Type\n    };\n  }\n  if (event.Type === PeerResponse) {\n    return {\n      from: event.ID,\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      messageType: 0,\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ID, Addrs}) => ({\n        id: ID,\n        multiaddrs: Addrs.map(addr => new Multiaddr(addr))\n      })),\n      providers: (event.Responses || []).map(({ID, Addrs}) => ({\n        id: ID,\n        multiaddrs: Addrs.map(addr => new Multiaddr(addr))\n      }))\n    };\n  }\n  if (event.Type === FinalPeer) {\n    let peer = {\n      id: event.ID,\n      multiaddrs: []\n    };\n    if (event.Responses && event.Responses.length) {\n      peer = {\n        id: event.Responses[0].ID,\n        multiaddrs: event.Responses[0].Addrs.map(addr => new Multiaddr(addr))\n      };\n    }\n    return {\n      from: event.ID,\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    };\n  }\n  if (event.Type === QueryError) {\n    return {\n      from: event.ID,\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    };\n  }\n  if (event.Type === Provider) {\n    return {\n      from: event.ID,\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ID, Addrs}) => ({\n        id: ID,\n        multiaddrs: Addrs.map(addr => new Multiaddr(addr))\n      }))\n    };\n  }\n  if (event.Type === Value) {\n    return {\n      from: event.ID,\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    };\n  }\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ID}) => ID);\n    if (!peers.length) {\n      throw new Error('No peer found');\n    }\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    };\n  }\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: event.ID\n    };\n  }\n  throw new Error('Unknown DHT event type');\n};", "export const SendingQuery = 0;\nexport const PeerResponse = 1;\nexport const FinalPeer = 2;\nexport const QueryError = 3;\nexport const Provider = 4;\nexport const Value = 5;\nexport const AddingPeer = 6;\nexport const DialingPeer = 7;", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createFindProvs = configure(api => {\n  async function* findProvs(cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return findProvs;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport const createGet = configure(api => {\n  async function* get(key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return get;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createProvide = configure(api => {\n  async function* provide(cids, options = { recursive: false }) {\n    const cidArr = Array.isArray(cids) ? cids : [cids];\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return provide;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { mapEvent } from './map-event.js';\nexport const createPut = configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...await multipartRequest([value], controller, options.headers)\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return put;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nexport const createQuery = configure(api => {\n  async function* query(peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return query;\n});", "import { createCmds } from './cmds.js';\nimport { createNet } from './net.js';\nimport { createSys } from './sys.js';\nexport function createDiag(config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createCmds = configure(api => {\n  async function cmds(options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return cmds;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNet = configure(api => {\n  async function net(options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return net;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createSys = configure(api => {\n  async function sys(options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return sys;\n});", "import { createChmod } from './chmod.js';\nimport { createCp } from './cp.js';\nimport { createFlush } from './flush.js';\nimport { createLs } from './ls.js';\nimport { createMkdir } from './mkdir.js';\nimport { createMv } from './mv.js';\nimport { createRead } from './read.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\nimport { createTouch } from './touch.js';\nimport { createWrite } from './write.js';\nexport function createFiles(config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createChmod = configure(api => {\n  async function chmod(path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return chmod;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createCp = configure(api => {\n  async function cp(sources, destination, options = {}) {\n    const sourceArr = Array.isArray(sources) ? sources : [sources];\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${ src }` : src),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return cp;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createFlush = configure(api => {\n  async function flush(path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path');\n    }\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return CID.parse(data.Cid);\n  }\n  return flush;\n});", "import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}", "import { objectToCamel } from './object-to-camel.js';\nexport function objectToCamelWithMetadata(entry) {\n  const file = objectToCamel(entry);\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8);\n  }\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    };\n    delete file.mtimeNsecs;\n  }\n  return file;\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMkdir = configure(api => {\n  async function mkdir(path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mkdir;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMv = configure(api => {\n  async function mv(sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources];\n    }\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mv;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport toIterable from 'stream-to-it/source.js';\nexport const createRead = configure(api => {\n  async function* read(path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    });\n    yield* toIterable(res.body);\n  }\n  return read;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport HTTP from 'ipfs-utils/src/http.js';\nexport const createRm = configure(api => {\n  async function rm(path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const body = await res.text();\n    if (body !== '') {\n      const error = new HTTP.HTTPError(res);\n      error.message = body;\n      throw error;\n    }\n  }\n  return rm;\n});", "import { CID } from 'multiformats/cid';\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    data.WithLocality = data.WithLocality || false;\n    return toCoreInterface(objectToCamelWithMetadata(data));\n  }\n  return stat;\n});\nfunction toCoreInterface(entry) {\n  entry.cid = CID.parse(entry.hash);\n  delete entry.hash;\n  return entry;\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createTouch = configure(api => {\n  async function touch(path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return touch;\n});", "import { modeToString } from '../lib/mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\nimport { configure } from '../lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createWrite = configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});", "import { createExport } from './export.js';\nimport { createGen } from './gen.js';\nimport { createImport } from './import.js';\nimport { createInfo } from './info.js';\nimport { createList } from './list.js';\nimport { createRename } from './rename.js';\nimport { createRm } from './rm.js';\nexport function createKey(config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport errCode from 'err-code';\nexport const createExport = configure(api => {\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return exportKey;\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGen = configure(api => {\n  async function gen(name, options = {\n    type: 'rsa',\n    size: 2048\n  }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data);\n  }\n  return gen;\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createImport = configure(api => {\n  async function importKey(name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data);\n  }\n  return importKey;\n});", "import { configure } from '../lib/configure.js';\nimport errCode from 'err-code';\nexport const createInfo = configure(api => {\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return info;\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createList = configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Keys || []).map(k => objectToCamel(k));\n  }\n  return list;\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRename = configure(api => {\n  async function rename(oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return rename;\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRm = configure(api => {\n  async function rm(name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return objectToCamel(data.Keys[0]);\n  }\n  return rm;\n});", "import { createLevel } from './level.js';\nimport { createLs } from './ls.js';\nimport { createTail } from './tail.js';\nexport function createLog(config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  };\n}", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLevel = configure(api => {\n  async function level(subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return level;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLs = configure(api => {\n  async function ls(options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Strings;\n  }\n  return ls;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createTail = configure(api => {\n  async function* tail(options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    yield* res.ndjson();\n  }\n  return tail;\n});", "import { createPublish } from './publish.js';\nimport { createResolve } from './resolve.js';\nimport { createPubsub } from './pubsub/index.js';\nexport function createName(config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  };\n}", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPublish = configure(api => {\n  async function publish(path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ path }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return publish;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function* resolve(path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  }\n  return resolve;\n});", "import { createCancel } from './cancel.js';\nimport { createState } from './state.js';\nimport { createSubs } from './subs.js';\nexport function createPubsub(config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  };\n}", "import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createCancel = configure(api => {\n  async function cancel(name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return cancel;\n});", "import { objectToCamel } from '../../lib/object-to-camel.js';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createState = configure(api => {\n  async function state(options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return state;\n});", "import { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createSubs = configure(api => {\n  async function subs(options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Strings || [];\n  }\n  return subs;\n});", "import { createData } from './data.js';\nimport { createGet } from './get.js';\nimport { createLinks } from './links.js';\nimport { createNew } from './new.js';\nimport { createPut } from './put.js';\nimport { createStat } from './stat.js';\nimport { createPatch } from './patch/index.js';\nexport function createObject(codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  };\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createData = configure(api => {\n  async function data(cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.arrayBuffer();\n    return new Uint8Array(data, 0, data.byteLength);\n  }\n  return data;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport const createGet = configure(api => {\n  async function get(cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map(link => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    };\n  }\n  return get;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLinks = configure(api => {\n  async function links(cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid instanceof Uint8Array ? CID.decode(cid) : cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return (data.Links || []).map(l => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }));\n  }\n  return links;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNew = configure(api => {\n  async function newObject(options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return newObject;\n});", "import { configure } from '../lib/configure.js';\nimport { createPut as createDagPut } from '../dag/put.js';\nexport const createPut = (codecs, options) => {\n  const fn = configure(api => {\n    const dagPut = createDagPut(codecs, options);\n    async function put(obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      });\n    }\n    return put;\n  });\n  return fn(options);\n};", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const output = await res.json();\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    };\n  }\n  return stat;\n});", "import { createAddLink } from './add-link.js';\nimport { createAppendData } from './append-data.js';\nimport { createRmLink } from './rm-link.js';\nimport { createSetData } from './set-data.js';\nexport function createPatch(config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  };\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createAddLink = configure(api => {\n  async function addLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${ cid }`,\n          dLink.Name || dLink.name || '',\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return addLink;\n});", "import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createAppendData = configure(api => {\n  async function appendData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ cid }`,\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return appendData;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const createRmLink = configure(api => {\n  async function rmLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${ cid }`,\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return rmLink;\n});", "import { CID } from 'multiformats/cid';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { configure } from '../../lib/configure.js';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nimport { abortSignal } from '../../lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createSetData = configure(api => {\n  async function setData(cid, data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${ cid }`],\n        ...options\n      }),\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    const {Hash} = await res.json();\n    return CID.parse(Hash);\n  }\n  return setData;\n});", "import { createAddAll } from './add-all.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRmAll } from './rm-all.js';\nimport { createRm } from './rm.js';\nimport { createRemote } from './remote/index.js';\nexport function createPin(config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  };\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createAddAll = configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {path, recursive, metadata} of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid);\n          }\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});", "import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nexport async function* normaliseInput(input) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  const cid = CID.asCID(input);\n  if (cid) {\n    yield toPin({ cid });\n    return;\n  }\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input });\n    return;\n  }\n  if (input.cid != null || input.path != null) {\n    return yield toPin(input);\n  }\n  if (Symbol.iterator in input) {\n    const iterator = input[Symbol.iterator]();\n    const first = iterator.next();\n    if (first.done)\n      return iterator;\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (Symbol.asyncIterator in input) {\n    const iterator = input[Symbol.asyncIterator]();\n    const first = await iterator.next();\n    if (first.done)\n      return iterator;\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value });\n      for await (const cid of iterator) {\n        yield toPin({ cid });\n      }\n      return;\n    }\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value);\n      for await (const obj of iterator) {\n        yield toPin(obj);\n      }\n      return;\n    }\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toPin(input) {\n  const path = input.cid || `${ input.path }`;\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT');\n  }\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  };\n  if (input.metadata != null) {\n    pin.metadata = input.metadata;\n  }\n  return pin;\n}", "import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport function createAdd(config) {\n  const all = createAddAll(config);\n  return configure(() => {\n    async function add(path, options = {}) {\n      return last(all([{\n          path,\n          ...options\n        }], options));\n    }\n    return add;\n  })(config);\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nfunction toPin(type, cid, metadata) {\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  };\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n  return pin;\n}\nexport const createLs = configure(api => {\n  async function* ls(options = {}) {\n    let paths = [];\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n    }\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${ path }`),\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) {\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n        }\n        return;\n      }\n      yield toPin(pin.Type, pin.Cid, pin.Metadata);\n    }\n  }\n  return ls;\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createRmAll = configure(api => {\n  async function* rmAll(source, options = {}) {\n    for await (const {path, recursive} of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams);\n      searchParams.append('arg', `${ path }`);\n      if (recursive != null)\n        searchParams.set('recursive', String(recursive));\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${ path }`,\n          recursive\n        })\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          yield* pin.Pins.map(cid => CID.parse(cid));\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  }\n  return rmAll;\n});", "import { createRmAll } from './rm-all.js';\nimport last from 'it-last';\nimport { configure } from '../lib/configure.js';\nexport const createRm = config => {\n  const all = createRmAll(config);\n  return configure(() => {\n    async function rm(path, options = {}) {\n      return last(all([{\n          path,\n          ...options\n        }], options));\n    }\n    return rm;\n  })(config);\n};", "import { Client } from '../../lib/core.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nimport { createRmAll } from './rm-all.js';\nimport { createService } from './service/index.js';\nexport function createRemote(config) {\n  const client = new Client(config);\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  };\n}", "import {\n  encodeAddParams,\n  decodePin\n} from './utils.js';\nexport function createAdd(client) {\n  async function add(cid, {timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({\n        cid,\n        ...query\n      })\n    });\n    return decodePin(await response.json());\n  }\n  return add;\n}", "import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid)) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid }`);\n  }\n};\nexport const encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};", "import {\n  encodeQuery,\n  decodePin\n} from './utils.js';\nexport function createLs(client) {\n  async function* ls({timeout, signal, headers, ...query}) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    });\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin);\n    }\n  }\n  return ls;\n}", "import { encodeQuery } from './utils.js';\nexport function createRm(client) {\n  async function rm({timeout, signal, headers, ...query}) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    });\n  }\n  return rm;\n}", "import { encodeQuery } from './utils.js';\nexport function createRmAll(client) {\n  async function rmAll({timeout, signal, headers, ...query}) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    });\n  }\n  return rmAll;\n}", "import { Client } from '../../../lib/core.js';\nimport { createAdd } from './add.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nexport function createService(config) {\n  const client = new Client(config);\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  };\n}", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { encodeEndpoint } from './utils.js';\nexport function createAdd(client) {\n  async function add(name, options) {\n    const {endpoint, key, headers, timeout, signal} = options;\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          name,\n          encodeEndpoint(endpoint),\n          key\n        ]\n      }),\n      headers\n    });\n  }\n  return add;\n}", "export function encodeEndpoint(url) {\n  const href = String(url);\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\nexport function decodeRemoteService(json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...json.Stat && { stat: decodeStat(json.Stat) }\n  };\n}\nexport function decodeStat(json) {\n  switch (json.Status) {\n  case 'valid': {\n      const {Pinning, Pinned, Queued, Failed} = json.PinCount;\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      };\n    }\n  case 'invalid': {\n      return { status: 'invalid' };\n    }\n  default: {\n      return { status: json.Status };\n    }\n  }\n}", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { decodeRemoteService } from './utils.js';\nexport function createLs(client) {\n  async function ls(options = {}) {\n    const {stat, headers, timeout, signal} = options;\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    });\n    const {RemoteServices} = await response.json();\n    return RemoteServices.map(decodeRemoteService);\n  }\n  return ls;\n}", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nexport function createRm(client) {\n  async function rm(name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({ arg: name })\n    });\n  }\n  return rm;\n}", "import { createLs } from './ls.js';\nimport { createPeers } from './peers.js';\nimport { createPublish } from './publish.js';\nimport { createSubscribe } from './subscribe.js';\nimport { createUnsubscribe } from './unsubscribe.js';\nimport { SubscriptionTracker } from './subscription-tracker.js';\nexport function createPubsub(config) {\n  const subscriptionTracker = new SubscriptionTracker();\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js';\nexport const createLs = configure(api => {\n  async function ls(options = {}) {\n    const {Strings} = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return rpcArrayToTextArray(Strings) || [];\n  }\n  return ls;\n});", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64url } from 'multiformats/bases/base64';\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText);\n  }\n  return strings;\n};\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb));\nconst rpcToBytes = mb => base64url.decode(mb);\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text));\nexport {\n  rpcArrayToTextArray,\n  rpcToText,\n  rpcToBytes,\n  textToUrlSafeRpc\n};", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nexport const createPeers = configure(api => {\n  async function peers(topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return peers;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { abortSignal } from '../lib/abort-signal.js';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createPublish = configure(api => {\n  async function publish(topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    });\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...await multipartRequest([data], controller, options.headers)\n    });\n    await res.text();\n  }\n  return publish;\n});", "import debug from 'debug';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport {\n  textToUrlSafeRpc,\n  rpcArrayToTextArray,\n  rpcToBytes\n} from '../lib/http-rpc-wire-format.js';\nconst log = debug('ipfs-http-client:pubsub:subscribe');\nexport const createSubscribe = (options, subsTracker) => {\n  return configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: msg.from,\n          data: rpcToBytes(msg.data),\n          seqno: rpcToBytes(msg.seqno),\n          topicIDs: rpcArrayToTextArray(msg.topicIDs)\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};", "export const createUnsubscribe = (options, subsTracker) => {\n  async function unsubscribe(topic, handler) {\n    subsTracker.unsubscribe(topic, handler);\n  }\n  return unsubscribe;\n};", "import { AbortController } from 'native-abort-controller';\nexport class SubscriptionTracker {\n  constructor() {\n    this._subs = new Map();\n  }\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || [];\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${ topic } with this handler`);\n    }\n    const controller = new AbortController();\n    this._subs.set(topic, [{\n        handler,\n        controller\n      }].concat(topicSubs));\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler));\n    }\n    return controller.signal;\n  }\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) || [];\n    let unsubs;\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n      unsubs = subs;\n    }\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic);\n    }\n    unsubs.forEach(s => s.controller.abort());\n  }\n}", "import { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\nexport const createRefs = configure((api, opts) => {\n  const refs = async function* (args, options = {}) {\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${ arg instanceof Uint8Array ? CID.decode(arg) : arg }`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  };\n  return Object.assign(refs, { local: createLocal(opts) });\n});", "import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocal = configure(api => {\n  async function* refsLocal(options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    yield* res.ndjson();\n  }\n  return refsLocal;\n});", "import { createGc } from './gc.js';\nimport { createStat } from './stat.js';\nimport { createVersion } from './version.js';\nexport function createRepo(config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  };\n}", "import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createGc = configure(api => {\n  async function* gc(options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: res => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        };\n      }\n    });\n    yield* res.ndjson();\n  }\n  return gc;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createStat = configure(api => {\n  async function stat(options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    };\n  }\n  return stat;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createVersion = configure(api => {\n  async function version(options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json();\n    return res.Version;\n  }\n  return version;\n});", "import { createStat as createBitswap } from '../bitswap/stat.js';\nimport { createStat as createRepo } from '../repo/stat.js';\nimport { createBw } from './bw.js';\nexport function createStats(config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  };\n}", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createBw = configure(api => {\n  async function* bw(options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: stats => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    });\n    yield* res.ndjson();\n  }\n  return bw;\n});", "import { createAddrs } from './addrs.js';\nimport { createConnect } from './connect.js';\nimport { createDisconnect } from './disconnect.js';\nimport { createLocalAddrs } from './local-addrs.js';\nimport { createPeers } from './peers.js';\nexport function createSwarm(config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  };\n}", "import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createAddrs = configure(api => {\n  async function addrs(options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Addrs} = await res.json();\n    return Object.keys(Addrs).map(id => ({\n      id,\n      addrs: (Addrs[id] || []).map(a => new Multiaddr(a))\n    }));\n  }\n  return addrs;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createConnect = configure(api => {\n  async function connect(addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return connect;\n});", "import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createDisconnect = configure(api => {\n  async function disconnect(addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return disconnect;\n});", "import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createLocalAddrs = configure(api => {\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});", "import { Multiaddr } from 'multiaddr';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createPeers = configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});", "import { createAddAll } from './add-all.js';\nimport last from 'it-last';\nimport { configure } from './lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single';\nexport function createAdd(options) {\n  const all = createAddAll(options);\n  return configure(() => {\n    async function add(input, options = {}) {\n      return await last(all(normaliseInput(input), options));\n    }\n    return add;\n  })(options);\n}", "import { CID } from 'multiformats/cid';\nimport { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { abortSignal } from './lib/abort-signal.js';\nimport { AbortController } from 'native-abort-controller';\nexport const createAddAll = configure(api => {\n  async function* addAll(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {headers, body, total, parts} = await multipartRequest(source, controller, options.headers);\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [\n      undefined,\n      undefined\n    ];\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    });\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file);\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file);\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name);\n      }\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [\n  undefined,\n  createOnUploadProgress(total, parts, progress)\n] : [\n  progress,\n  undefined\n];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return ({loaded, total}) => {\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {start, end, name} = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface({name, hash, size, mode, mtime, mtimeNsecs}) {\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}", "import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}", "import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport blobToIt from 'blob-to-it';\nimport itPeekable from 'it-peekable';\nimport all from 'it-all';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js';\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (isBlob(input)) {\n    return blobToIt(input);\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)));\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return uint8ArrayFromString(chunk.toString());\n}", "import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}", "import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createCat = configure(api => {\n  async function* cat(path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return cat;\n});", "import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createCommands = configure(api => {\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  };\n  return commands;\n});", "import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createDns = configure(api => {\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Path;\n  };\n  return dns;\n});", "import { configure } from './lib/configure.js';\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '');\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    };\n  };\n});", "import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createGet = configure(api => {\n  async function* get(path, options = {}) {\n    const opts = {\n      arg: `${ path instanceof Uint8Array ? CID.decode(path) : path }`,\n      ...options\n    };\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel;\n      delete opts.compressionLevel;\n    }\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return get;\n});", "import { objectToCamel } from './lib/object-to-camel.js';\nimport { Multiaddr } from 'multiaddr';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createId = configure(api => {\n  async function id(options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = { ...objectToCamel(data) };\n    if (output.addresses) {\n      output.addresses = output.addresses.map(ma => new Multiaddr(ma));\n    }\n    return output;\n  }\n  return id;\n});", "import { createId } from './id.js';\nexport const createIsOnline = options => {\n  const id = createId(options);\n  async function isOnline(options = {}) {\n    const res = await id(options);\n    return Boolean(res && res.addresses && res.addresses.length);\n  }\n  return isOnline;\n};", "import { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nimport { createStat } from './files/stat.js';\nexport const createLs = configure((api, opts) => {\n  async function* ls(path, options = {}) {\n    const pathStr = `${ path instanceof Uint8Array ? CID.decode(path) : path }`;\n    async function mapLink(link) {\n      let hash = link.Hash;\n      if (hash.includes('/')) {\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${ hash }`;\n        const stats = await createStat(opts)(ipfsPath);\n        hash = stats.cid;\n      } else {\n        hash = CID.parse(hash);\n      }\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${ link.Name }` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      };\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8);\n      }\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = { secs: link.Mtime };\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs;\n        }\n      }\n      return entry;\n    }\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let result of res.ndjson()) {\n      result = result.Objects;\n      if (!result) {\n        throw new Error('expected .Objects in results');\n      }\n      result = result[0];\n      if (!result) {\n        throw new Error('expected one array in results.Objects');\n      }\n      const links = result.Links;\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links');\n      }\n      if (!links.length) {\n        yield mapLink(result);\n        return;\n      }\n      yield* links.map(mapLink);\n    }\n  }\n  return ls;\n});\nfunction typeOf(link) {\n  switch (link.Type) {\n  case 1:\n  case 5:\n    return 'dir';\n  case 2:\n    return 'file';\n  default:\n    return 'file';\n  }\n}", "import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createMount = configure(api => {\n  async function mount(options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return objectToCamel(await res.json());\n  }\n  return mount;\n});", "import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createPing = configure(api => {\n  async function* ping(peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ peerId }`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    });\n    yield* res.ndjson();\n  }\n  return ping;\n});", "import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  async function resolve(path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Path} = await res.json();\n    return Path;\n  }\n  return resolve;\n});", "import { configure } from './lib/configure.js';\nimport errCode from 'err-code';\nexport const createStart = configure(api => {\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return start;\n});", "import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createStop = configure(api => {\n  async function stop(options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return stop;\n});", "import { objectToCamel } from './lib/object-to-camel.js';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport const createVersion = configure(api => {\n  async function version(options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    };\n  }\n  return version;\n});", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"ipfs-utils/src/files/glob-source.js\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})"],
  "mappings": "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",
  "names": []
}
