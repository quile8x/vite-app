"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const shared_1 = require("./shared");
const chalk_1 = __importDefault(require("chalk"));
const optionsCheck = (options) => {
    var _a;
    if (Array.isArray(options === null || options === void 0 ? void 0 : options.libList) && ((_a = options === null || options === void 0 ? void 0 : options.libList) === null || _a === void 0 ? void 0 : _a.length)) {
        return true;
    }
    shared_1.log(chalk_1.default.yellow(`libList is required, please check your options!`));
    return false;
};
function vitePluginImp(config) {
    let viteConfig;
    const name = 'vite-plugin-imp';
    if (!optionsCheck(config)) {
        return { name };
    }
    return {
        name,
        configResolved(resolvedConfig) {
            // store the resolved config
            viteConfig = resolvedConfig;
        },
        transform(code, id) {
            if (!/(node_modules)/.test(id) && shared_1.codeIncludesLibraryName(code, config.libList)) {
                const sourcemap = this === null || this === void 0 ? void 0 : this.getCombinedSourcemap();
                return {
                    code: shared_1.addImportToCode(code, config, viteConfig.command),
                    map: sourcemap
                };
            }
            return {
                code,
                map: null
            };
        }
    };
}
exports.default = vitePluginImp;
//# sourceMappingURL=index.js.map