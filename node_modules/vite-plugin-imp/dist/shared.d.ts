import { ResolvedConfig } from 'vite';
export interface LibItem {
    /**
     * library name
     */
    libName: string;
    /**
     * component style file path
     */
    style: (name: string) => string | string[] | boolean;
    /**
     * default `es`
     */
    libDirectory?: string;
    /**
     * whether convert component name from camel to dash
     */
    camel2DashComponentName?: boolean;
    /**
     * whether replace old import statement, only work in command === serve
     */
    replaceOldImport?: boolean;
    /**
     * imported name formatter
     */
    nameFormatter?: (name: string, importedName: string) => string;
}
export interface ImpConfig {
    optimize?: boolean;
    libList: LibItem[];
}
export interface ImportMaps {
    [key: string]: string[];
}
export declare function parseImportModule(code: string, libList: ImpConfig['libList'], command: ResolvedConfig['command']): {
    importMaps: ImportMaps;
    codeRemoveOriginImport: string;
};
export declare const codeIncludesLibraryName: (code: string, libList: ImpConfig['libList']) => boolean;
export declare const stylePathHandler: (stylePath: string | string[] | boolean) => string;
export declare const addImportToCode: (code: string, impConfig: ImpConfig, command?: ResolvedConfig['command']) => string;
export declare const log: (...args: any[]) => void;
