import { StaticJsonRpcProvider } from '@ethersproject/providers';
import { TEthersSigner } from 'eth-hooks/models';
import { FC } from 'react';
interface IWalletProps {
    signer: TEthersSigner | undefined;
    ensProvider: StaticJsonRpcProvider | undefined;
    localProvider: StaticJsonRpcProvider | undefined;
    price: number;
    color: string;
}
/**
 *   Displays a wallet where you can specify address and send USD/ETH, with options to
  scan address, to convert between USD and ETH, to see and generate private keys,
  to send, receive and extract the burner wallet
  ~ Features ~

  - Provide provider={userProvider} to display a wallet
  - Provide address={address} if you want to specify address, otherwise
                                                    your default address will be used
  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name
              (ex. "0xa870" => "user.eth") or you can enter directly ENS name instead of address
  - Provide price={price} of ether and easily convert between USD and ETH
  - Provide color to specify the color of wallet icon
 * @param props
 * @returns (FC)
 */
export declare const Wallet: FC<IWalletProps>;
export {};
//# sourceMappingURL=Wallet.d.ts.map