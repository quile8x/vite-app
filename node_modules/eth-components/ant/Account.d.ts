import { StaticJsonRpcProvider } from '@ethersproject/providers';
import { CreateEthersModalConnector } from 'eth-hooks/context';
import { Signer } from 'ethers';
import { FC } from 'react';
export interface IAccountProps {
    ensProvider: StaticJsonRpcProvider | undefined;
    localProvider?: StaticJsonRpcProvider | undefined;
    createLoginConnector?: CreateEthersModalConnector;
    /**
     * if hasContextConnect is true, it will not use this variable
     */
    signer?: Signer;
    /**
     * if hasContextConnect = false, do not use context or context connect/login/logout.  only used passed in address.  defaults={false}
     */
    hasContextConnect: boolean;
    fontSize?: number;
    blockExplorer: string;
    price: number;
}
/**
  Displays an Address, Balance, and Wallet as one Account component,
  also allows users to log in to existing accounts and log out

    ~ Features ~
  - Provide address={address} and get balance corresponding to the given address
  - Provide localProvider={localProvider} to access balance on local network
  - Provide userProvider={userProvider} to display a wallet
  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name
              (ex. "0xa870" => "user.eth")
  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}
              to be able to log in/log out to/from existing accounts
  - Provide blockExplorer={blockExplorer}, click on address and get the link
              (ex. by default "https://etherscan.io/" or for xdai "https://blockscout.com/poa/xdai/")
 * @param props
 * @returns (FC)
 */
export declare const Account: FC<IAccountProps>;
//# sourceMappingURL=Account.d.ts.map