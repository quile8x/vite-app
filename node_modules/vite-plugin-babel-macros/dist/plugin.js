"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const babel = tslib_1.__importStar(require("@babel/core"));
const sourceRegex = /\.(j|t)sx?$/;
const tsxRegex = /\.(j|t)sx$/; // all files are being interpreted as TS, so we'll treat JSX as TSX
function macrosPlugin() {
    return {
        name: "babel-macros",
        enforce: "pre",
        async transform(source, filename) {
            if (filename.includes("node_modules")) {
                return undefined;
            }
            if (!sourceRegex.test(filename)) {
                return undefined;
            }
            const result = await babel.transformAsync(source, {
                filename,
                plugins: [
                    require.resolve("@babel/plugin-syntax-jsx"),
                    [
                        require.resolve("@babel/plugin-syntax-typescript"),
                        { isTSX: tsxRegex.test(filename) },
                    ],
                    require.resolve("babel-plugin-macros"),
                ],
                babelrc: false,
                configFile: false,
                sourceMaps: true,
            });
            return result;
        },
    };
}
exports.default = macrosPlugin;
