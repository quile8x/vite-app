/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YourCollectible,
  YourCollectibleInterface,
} from "../YourCollectible";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600f81526e596f7572436f6c6c65637469626c6560881b6020808301918252835180850190945260038452622ca1a160e91b9084015281519192916200006491600091620000f3565b5080516200007a906001906020840190620000f3565b50505062000097620000916200009d60201b60201c565b620000a1565b620001d6565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b611d3880620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063996cba681161007c578063996cba6814610275578063a22cb46514610288578063b88d4fde1461029b578063c87b56dd146102ae578063e985e9c5146102c1578063f2fde38b146102fd57600080fd5b80636352211e1461022e57806370a0823114610241578063715018a6146102545780638da5cb5b1461025c57806395d89b411461026d57600080fd5b806318160ddd116100ff57806318160ddd146101da57806323b872dd146101e25780632f745c59146101f557806342842e0e146102085780634f6ccce71461021b57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a4578063110bcd45146101b9575b600080fd5b61014f61014a366004611a04565b610310565b60405190151581526020015b60405180910390f35b61016c610321565b60405161015b9190611aef565b61018c610187366004611a3e565b6103b3565b6040516001600160a01b03909116815260200161015b565b6101b76101b23660046119da565b610440565b005b6101cc6101c7366004611978565b610556565b60405190815260200161015b565b6008546101cc565b6101b76101f0366004611884565b61058e565b6101cc6102033660046119da565b6105bf565b6101b7610216366004611884565b610655565b6101cc610229366004611a3e565b610670565b61018c61023c366004611a3e565b610703565b6101cc61024f366004611836565b61077a565b6101b7610801565b600b546001600160a01b031661018c565b61016c610867565b6101b7610283366004611884565b6105b4565b6101b761029636600461193c565b610876565b6101b76102a93660046118c0565b61093b565b61016c6102bc366004611a3e565b610973565b61014f6102cf366004611851565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b761030b366004611836565b61097e565b600061031b82610a49565b92915050565b60606000805461033090611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90611c14565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b5050505050905090565b60006103be82610a6e565b6104245760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061044b82610703565b9050806001600160a01b0316836001600160a01b031614156104b95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161041b565b336001600160a01b03821614806104d557506104d581336102cf565b6105475760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161041b565b6105518383610a8b565b505050565b6000610566600c80546001019055565b6000610571600c5490565b905061057d8482610af9565b6105878184610c38565b9392505050565b6105983382610cc3565b6105b45760405162461bcd60e51b815260040161041b90611b54565b610551838383610dad565b60006105ca8361077a565b821061062c5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161041b565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105518383836040518060200160405280600081525061093b565b600061067b60085490565b82106106de5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161041b565b600882815481106106f1576106f1611cc0565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061031b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161041b565b60006001600160a01b0382166107e55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161041b565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b0316331461085b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161041b565b6108656000610f58565b565b60606001805461033090611c14565b6001600160a01b0382163314156108cf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161041b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109453383610cc3565b6109615760405162461bcd60e51b815260040161041b90611b54565b61096d84848484610faa565b50505050565b606061031b82610fdd565b600b546001600160a01b031633146109d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161041b565b6001600160a01b038116610a3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161041b565b610a4681610f58565b50565b60006001600160e01b0319821663780e9d6360e01b148061031b575061031b82611169565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ac082610703565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610b4f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161041b565b610b5881610a6e565b15610ba55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161041b565b610bb1600083836111b9565b6001600160a01b0382166000908152600360205260408120805460019290610bda908490611ba5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610c4182610a6e565b610ca45760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161041b565b6000828152600a6020908152604090912082516105519284019061170b565b6000610cce82610a6e565b610d2f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161041b565b6000610d3a83610703565b9050806001600160a01b0316846001600160a01b03161480610d755750836001600160a01b0316610d6a846103b3565b6001600160a01b0316145b80610da557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610dc082610703565b6001600160a01b031614610e285760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161041b565b6001600160a01b038216610e8a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161041b565b610e958383836111b9565b610ea0600082610a8b565b6001600160a01b0383166000908152600360205260408120805460019290610ec9908490611bd1565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ef7908490611ba5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fb5848484610dad565b610fc1848484846111c4565b61096d5760405162461bcd60e51b815260040161041b90611b02565b6060610fe882610a6e565b61104e5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161041b565b6000828152600a60205260408120805461106790611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461109390611c14565b80156110e05780601f106110b5576101008083540402835291602001916110e0565b820191906000526020600020905b8154815290600101906020018083116110c357829003601f168201915b50505050509050600061111b60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905080516000141561112e575092915050565b815115611160578082604051602001611148929190611a83565b60405160208183030381529060405292505050919050565b610da5846112d1565b60006001600160e01b031982166380ac58cd60e01b148061119a57506001600160e01b03198216635b5e139f60e01b145b8061031b57506301ffc9a760e01b6001600160e01b031983161461031b565b6105518383836113c5565b60006001600160a01b0384163b156112c657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611208903390899088908890600401611ab2565b602060405180830381600087803b15801561122257600080fd5b505af1925050508015611252575060408051601f3d908101601f1916820190925261124f91810190611a21565b60015b6112ac573d808015611280576040519150601f19603f3d011682016040523d82523d6000602084013e611285565b606091505b5080516112a45760405162461bcd60e51b815260040161041b90611b02565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610da5565b506001949350505050565b60606112dc82610a6e565b6113405760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161041b565b600061137460408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905060008151116113945760405180602001604052806000815250610587565b8061139e8461147d565b6040516020016113af929190611a83565b6040516020818303038152906040529392505050565b6001600160a01b0383166114205761141b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611443565b816001600160a01b0316836001600160a01b03161461144357611443838261157b565b6001600160a01b03821661145a5761055181611618565b826001600160a01b0316826001600160a01b0316146105515761055182826116c7565b6060816114a15750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114cb57806114b581611c4f565b91506114c49050600a83611bbd565b91506114a5565b60008167ffffffffffffffff8111156114e6576114e6611cd6565b6040519080825280601f01601f191660200182016040528015611510576020820181803683370190505b5090505b8415610da557611525600183611bd1565b9150611532600a86611c6a565b61153d906030611ba5565b60f81b81838151811061155257611552611cc0565b60200101906001600160f81b031916908160001a905350611574600a86611bbd565b9450611514565b600060016115888461077a565b6115929190611bd1565b6000838152600760205260409020549091508082146115e5576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061162a90600190611bd1565b6000838152600960205260408120546008805493945090928490811061165257611652611cc0565b90600052602060002001549050806008838154811061167357611673611cc0565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806116ab576116ab611caa565b6001900381819060005260206000200160009055905550505050565b60006116d28361077a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461171790611c14565b90600052602060002090601f016020900481019282611739576000855561177f565b82601f1061175257805160ff191683800117855561177f565b8280016001018555821561177f579182015b8281111561177f578251825591602001919060010190611764565b5061178b92915061178f565b5090565b5b8082111561178b5760008155600101611790565b600067ffffffffffffffff808411156117bf576117bf611cd6565b604051601f8501601f19908116603f011681019082821181831017156117e7576117e7611cd6565b8160405280935085815286868601111561180057600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461183157600080fd5b919050565b60006020828403121561184857600080fd5b6105878261181a565b6000806040838503121561186457600080fd5b61186d8361181a565b915061187b6020840161181a565b90509250929050565b60008060006060848603121561189957600080fd5b6118a28461181a565b92506118b06020850161181a565b9150604084013590509250925092565b600080600080608085870312156118d657600080fd5b6118df8561181a565b93506118ed6020860161181a565b925060408501359150606085013567ffffffffffffffff81111561191057600080fd5b8501601f8101871361192157600080fd5b611930878235602084016117a4565b91505092959194509250565b6000806040838503121561194f57600080fd5b6119588361181a565b91506020830135801515811461196d57600080fd5b809150509250929050565b6000806040838503121561198b57600080fd5b6119948361181a565b9150602083013567ffffffffffffffff8111156119b057600080fd5b8301601f810185136119c157600080fd5b6119d0858235602084016117a4565b9150509250929050565b600080604083850312156119ed57600080fd5b6119f68361181a565b946020939093013593505050565b600060208284031215611a1657600080fd5b813561058781611cec565b600060208284031215611a3357600080fd5b815161058781611cec565b600060208284031215611a5057600080fd5b5035919050565b60008151808452611a6f816020860160208601611be8565b601f01601f19169290920160200192915050565b60008351611a95818460208801611be8565b835190830190611aa9818360208801611be8565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ae590830184611a57565b9695505050505050565b6020815260006105876020830184611a57565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611bb857611bb8611c7e565b500190565b600082611bcc57611bcc611c94565b500490565b600082821015611be357611be3611c7e565b500390565b60005b83811015611c03578181015183820152602001611beb565b8381111561096d5750506000910152565b600181811c90821680611c2857607f821691505b60208210811415611c4957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c6357611c63611c7e565b5060010190565b600082611c7957611c79611c94565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a4657600080fdfea2646970667358221220c4ea87c03473078f21d6c22d52b958773945368f2dc285f682c0140e231143f064736f6c63430008060033";

export class YourCollectible__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourCollectible> {
    return super.deploy(overrides || {}) as Promise<YourCollectible>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourCollectible {
    return super.attach(address) as YourCollectible;
  }
  connect(signer: Signer): YourCollectible__factory {
    return super.connect(signer) as YourCollectible__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourCollectibleInterface {
    return new utils.Interface(_abi) as YourCollectibleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourCollectible {
    return new Contract(address, _abi, signerOrProvider) as YourCollectible;
  }
}
